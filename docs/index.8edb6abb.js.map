{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-d5fbe85a41821e87.js","public/assets/maps/mapsArray.ts","src/actors/GameMaster.ts","src/effects/DrawManager.ts","node_modules/@parcel/runtime-js/lib/runtime-ed0d71fd60ab760d.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","src/actors/Map.ts","src/actors/Chest.ts","src/actors/ChestManager.ts","node_modules/@parcel/runtime-js/lib/runtime-7f49521ddc1d850a.js","src/actors/Hero.ts","src/actors/HeroManager.ts","node_modules/@parcel/runtime-js/lib/runtime-1c534637a07b0210.js","src/actors/Skeleton.ts","src/actors/FPSViewer.ts","src/actors/Chronometer.ts","src/actors/UpperMessage.ts","src/app.ts"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"aYtYf\\\":\\\"index.8edb6abb.js\\\",\\\"6DGUb\\\":\\\"dungeonStuffs4.858ecf4e.png\\\",\\\"lBejV\\\":\\\"link.be376b96.png\\\",\\\"7FNnd\\\":\\\"skeleton.4edd6763.png\\\"}\"));","export const mapsArray: Array<string> = [`\nWWWWWWWWWWWWWWWWWWWWWWWWWWWW\nWWWWWWWWWWWWWWWWWWWWWWWWWWWW\nW............WW............W\nW.WWWW.iWWWi.WW.iWWWi.WWWW.W\nW.WWWW.WWWWW.WW.WWWWW.WWWW.W\nW.WWWW.WWWWW.ii.WWWWW.WWWW.W\nW..........................W\nW.WWWW.WW.WWWWWWWW.WW.WWWW.W\nW.WWWW.WW.WWWWWWWW.WW.WWWW.W\nW......WW....WW....WW......W\nW.iWWi.WWWWi.WW.iWWWW.iWWi.W\nW.WWWW.WWWWW.WW.WWWWW.WWWW.W\nW.WWWW.WW..........WW.WWWW.W\nW.WWWW.WW.iWWWWWWi.WW.WWWW.W\nW.iWWi.WW.WeeeeeeW.WW.iWWi.W\nW.........WeeSeeeW.........W\nW.WWWW.WW.WeeeeeeW.WW.WWWW.W\nW.WWWW.WW.WWieeiWW.WW.WWWW.W\nW.WWWW.WW..........WW.WWWW.W\nW.WWWW.WW.WWWWWWWW.WW.WWWW.W\nW.WWWW.WW.WWWWWWWW.WW.WWWW.W\nW............WW............W\nW.iWWi.WWWWW.WW.WWWWW.iWWi.W\nW.WWWW.WWWWW.WW.WWWWW.WWWW.W\nW...WW................WW...W\nWWW.WW.WW.iWWWWWWi.WW.WW.WWW\nWWW.WW.WW.WWWWWWWW.WW.WW.WWW\nW......WW....WW....WW......W\nW.iWWWWWWWWW.WW.WWWWWWWWWi.W\nW.WWWWWWWWWW.WW.WWWWWWWWWW.W\nW..........................W\nWWWWWWWWWWWWWWWWWWWWWWWWWWWW\n`, `\nWWWWWWWWWWWWWWWWWWWWWWWWWWWW\nWWWWWWWWWWWWWWWWWWWWWWWWWWWW\nW......WW....WW....WW......W\nW.iWWi.WW.Wi.WW.iW.WW.iWWi.W\nW.WWWW.WW.WW.WW.WW.WW.WWWW.W\nW.iWWi.WW.WW.ii.WW.WW.iWWi.W\nW......WW..........WW......W\nWWWWWW.WW.iWWWWWWi.WW.WWWWWW\nWWWWWW.WW.WWWWWWWW.WW.WWWWWW\nW......WW....WW....WW......W\nWWWWWi.WWWWi.WW.iWWWW.iWWWWW\nWWWWWi.WWWWW.WW.WWWWW.iWWWWW\nW......WW..........WW......W\nW.iWWi.WW.iWWeeWWi.WW.iWWi.W\nW.WWWW.WW.WeeeeeeW.WW.WWWW.W\nW.WWWW....eeeSeeee....WWWW.W\nW.WWWWWWi.WeeeeeeW.iWWWWWW.W\nW.iWWWWWW.WWieeiWW.WWWWWWi.W\nW......WW..........WW......W\nW.WWWW.WW.WWWWWWWW.WW.WWWWWW\nW.WWWW.WW.WWWWWWWW.WW.WWWWWW\nW............WW............W\nW.iWWi.WWWWW.WW.WWWWW.iWWi.W\nW.WWWW.WWWWW.WW.WWWWW.WWWW.W\nW...WW.......WW.......WW...W\nWWi.WWWWi.iWWWWWWi.iWWWW.iWW\nWWi.WWWWi.iWWWWWWi.iWWWW.iWW\nW............WW............W\nW.iWWWWWWWWi.WW.iWWWWWWWWi.W\nW.iWWWWWWWWi.WW.iWWWWWWWWi.W\nW............WW............W\nWWWWWWWWWWWWWWWWWWWWWWWWWWWW\n`,\n  `\nWWWWWWWWWWWWWWWWWWWWWWWWWWWW\nWWWWWWWWWWWWWWWWWWWWWWWWWWWW\ni......ii....ii....ii......i\ni.iiii.ii.ii.ii.ii.ii.iiii.i\ni.iiii.ii.ii.ii.ii.ii.iiii.i\ni.iiii.ii.ii.ii.ii.ii.iiii.i\ni......ii..........ii......i\ni.iiiiiii.iiiiiiii.iiiiiii.i\ni.iiiiiii.iiiiiiii.iiiiiii.i\ni......ii....ii....ii......i\niiiiii.iiiii.ii.iiiii.iiiiii\niiiiii.iiiii.ii.iiiii.iiiiii\ni......ii....ii....ii......i\ni.iiii.ii.iiiiiiii.ii.iiii.i\ni.iiii.ii.ieeeeeei.ii.iiii.i\ni......ii.eeeSeeee.ii......i\ni.iiiiiii.ieeeeeei.iiiiiii.i\ni.iiiiiii.iiiiiiii.iiiiiii.i\ni......ii....ii....ii......i\ni.iiii.ii.iiiiiiii.ii.iiiiii\ni.iiii.ii.iiiiiiii.ii.iiiiii\ni............ii............i\ni.iiii.iiiii.ii.iiiii.iiii.i\ni.iiii.iiiii.ii.iiiii.iiii.i\ni...ii.......ii.......ii...i\niii.iiiii.iiiiiiii.iiiii.iii\niii.iiiii.iiiiiiii.iiiii.iii\ni............ii............i\ni.iiiiiiiiii.ii.iiiiiiiiii.i\ni.iiiiiiiiii.ii.iiiiiiiiii.i\ni............ii............i\niiiiiiiiiiiiiiiiiiiiiiiiiiii\n`,]","import { mapsArray } from \"../../public/assets/maps/mapsArray\";\nimport { Level } from \"../types/Level\";\n\nconst mode: Array<Level> = [\n  {\n    heroSpeed: 50,\n    heroNumber: 4,\n    myDungeonMap: mapsArray[0],\n    viewField: 250,\n  },\n  {\n    heroSpeed: 70,\n    heroNumber: 6,\n    myDungeonMap: mapsArray[1],\n    viewField: 200,\n  },\n  {\n    heroSpeed: 80,\n    heroNumber: 8,\n    myDungeonMap: mapsArray[2],\n    viewField: 150,\n  }\n]\n\nclass GameMaster {\n  currentLevel: number;\n  heroSpeed: number;\n  heroNumber: number;\n  myDungeonMap: string;\n  viewField: number;\n  skeletonPosition: any;\n  allChestsOpen: boolean;\n  isSkeletonDead: boolean;\n  debug: boolean;\n\n  constructor() {\n    this.currentLevel = 1;\n\n    // GAME SETTINGS\n    this.heroSpeed = mode[this.currentLevel].heroSpeed;\n    this.heroNumber = mode[this.currentLevel].heroNumber;\n    this.myDungeonMap = mode[this.currentLevel].myDungeonMap;\n    this.viewField = mode[this.currentLevel].viewField;\n\n    // GAME STATUS\n    this.skeletonPosition = {};\n    this.allChestsOpen = false;\n    this.isSkeletonDead = false;\n\n    this.debug = false;\n    return this;\n  }\n\n  update(deltaSeconds: any) { }\n\n  keyboardEvent(key: any) { }\n\n  draw(delta: any, ctx: any) { }\n}\n\nexport const myGameMaster = new GameMaster();\n","import { Point } from \"../types/Point\";\n\nconst PICTURES: any = {\n  rock: {\n    sheet: \"dungeon\",\n    pos: { x: 0, y: 207 },\n    size: { x: 18, y: 16 },\n    dest: { x: 40, y: 30 },\n    offset: { x: 0, y: 0 },\n  },\n  water: {\n    sheet: \"dungeon\",\n    pos: { x: 16, y: 207 },\n    size: { x: 18, y: 16 },\n    dest: { x: 40, y: 30 },\n    offset: { x: 0, y: 0 },\n  },\n  fire: {\n    sheet: \"dungeon\",\n    pos: { x: 32, y: 207 },\n    size: { x: 18, y: 16 },\n    dest: { x: 40, y: 30 },\n    offset: { x: 0, y: 0 },\n  },\n  closedChest: {\n    sheet: \"dungeon\",\n    pos: { x: 240, y: 174 },\n    size: { x: 30, y: 18 },\n    dest: { x: 45, y: 30 },\n    offset: { x: 0, y: 8 },\n  },\n  openChest: {\n    sheet: \"dungeon\",\n    pos: { x: 240, y: 208 },\n    size: { x: 30, y: 18 },\n    dest: { x: 45, y: 30 },\n    offset: { x: 0, y: 8 },\n  },\n  wall: {\n    sheet: \"dungeon\",\n    pos: { x: 0, y: 16 },\n    size: { x: 20, y: 18 },\n    dest: { x: 30, y: 30 },\n    offset: { x: 0, y: 0 },\n  },\n  floor: {\n    sheet: \"dungeon\",\n    pos: { x: 64, y: 96 },\n    size: { x: 20, y: 18 },\n    dest: { x: 30, y: 30 },\n    offset: { x: 0, y: 0 },\n  },\n  torch: {\n    sheet: \"dungeon\",\n    frames: 8,\n    pos: { x: 132, y: 153 },\n    size: { x: 16, y: 13 },\n    dest: { x: 26, y: 23 },\n    offset: { x: -5, y: 8 },\n  },\n};\n\nconst loadSpriteSheet = (url: any) => {\n  const img = new Image();\n  img.src = url;\n  return img;\n};\n\nconst SPRITESHEETS = {\n  dungeon: loadSpriteSheet(require(\"../../public/images/dungeonStuffs4.png\")),\n};\n\nclass DrawManager {\n  render_torch_time: number\n  constructor() {\n    this.render_torch_time = 0;\n  }\n\n  getObject(objectName: string) {\n    const objectToDraw = PICTURES[objectName];\n    if (objectToDraw) {\n      return objectToDraw;\n    }\n    throw new Error(`No object to draw with name ${objectName}`);\n  }\n\n  getDrawElements(ctx: any, objectName: any, position: Point, delta = 0, animationOffset = 0) {\n    this.render_torch_time += delta;\n    const getDrawElements = Math.floor(\n      this.render_torch_time + animationOffset / 8\n    );\n    const { pos, size, dest, frames, offset } = this.getObject(objectName);\n    const drawFrame = frames ? getDrawElements % frames : 0;\n    // ctx.globalAlpha = 1;\n    ctx.drawImage(\n      SPRITESHEETS.dungeon,\n      pos.x + size.x * drawFrame,\n      pos.y,\n      size.x,\n      size.y,\n      position.x - offset.x,\n      position.y - offset.y,\n      dest.x,\n      dest.y\n    );\n  }\n\n  drawHalf(ctx: any, objectName: any, position: Point, half = false) {\n    const { pos, size, dest, offset } = this.getObject(objectName);\n    // void ctx.drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n    ctx.drawImage(\n      SPRITESHEETS.dungeon,\n      half ? pos.x + size.x / 2 : pos.x,\n      pos.y - size.y,\n      size.x / 2,\n      size.y,\n      half ? position.x + 48 - offset.x : position.x + 20 - offset.x,\n      position.y - 8,\n      dest.x - 12,\n      dest.y\n    );\n  }\n\n  getDrawHeaders(ctx: any, objectName: any, half: any) {\n    const headerPositionBase = { x: 450, y: 10 };\n    const typeOffset: any = {\n      rock: { x: 0, y: 0 },\n      fire: { x: 50, y: 0 },\n      water: { x: 100, y: 0 },\n    };\n    this.drawHalf(\n      ctx,\n      objectName,\n      {\n        x: headerPositionBase.x + typeOffset[objectName].x,\n        y: headerPositionBase.y + typeOffset[objectName].y,\n      },\n      half\n    );\n  }\n}\nexport const myDrawManager = new DrawManager();\n","module.exports = require('./helpers/bundle-url').getBundleURL('aYtYf') + require('./helpers/bundle-manifest').resolve(\"6DGUb\");","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","import { myDrawManager } from \"../effects/DrawManager\";\nimport { Point } from \"../types/Point\";\nimport { myGameMaster } from \"./GameMaster\";\n\nclass Map {\n  position: Point;\n  tileSize: number;\n  currentLevel: number;\n  map: any\n  constructor(tileSize: number = 23) {\n    this.position = { x: 0, y: 0 };\n    this.tileSize = tileSize;\n    this.currentLevel = myGameMaster.currentLevel;\n\n    const rows = myGameMaster.myDungeonMap.trim().split(\"\\n\");\n    this.map = rows.map((row) => row.split(\"\"));\n    return this;\n  }\n\n  GetDungeonStart() {\n    for (let i = 0; i < this.map.length; i += 1) {\n      for (let j = 0; j < this.map[i].length; j += 1) {\n        if (this.map[i][j] === \"S\") {\n          return this.editedTilePos(i, j);\n        }\n      }\n    }\n    throw new Error(\"Set the S for skeleton start\");\n  }\n\n  getRandomLocations(element: any) {\n    const availablePositions = [];\n    for (let i = 0; i < this.map.length; i += 1) {\n      for (let j = 0; j < this.map[i].length; j += 1) {\n        if (this.map[i][j] === \".\") {\n          element === \"chest\"\n            ? availablePositions.push(this.tilePos(i, j))\n            : availablePositions.push(this.editedTilePos(i, j));\n        }\n      }\n    }\n    return availablePositions;\n  }\n\n  posToTile(position: Point) {\n    const i = Math.floor((position.x - this.position.x) / this.tileSize);\n    const j = Math.floor((position.y - this.position.y) / this.tileSize);\n    return [j, i];\n  }\n\n  tileAtIndex(tileIndex: any) {\n    try {\n      const tile = this.map[tileIndex[0]][tileIndex[1]];\n      return tile;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  tile(position: Point, direction: any) {\n    const tileIndex = this.posToTile(position);\n    const facing = [tileIndex[0] + direction[1], tileIndex[1] + direction[0]];\n    const tile = this.tileAtIndex(facing);\n    return tile;\n  }\n\n  tilePos(i: any, j: any) {\n    return {\n      x: this.position.x + j * this.tileSize,\n      y: this.position.y + i * this.tileSize,\n    };\n  }\n\n  editedTilePos(i: any, j: any) {\n    return {\n      x: this.position.x + this.tileSize * j + this.tileSize / 2,\n      y: this.position.y + this.tileSize * i + this.tileSize / 2,\n    };\n  }\n\n  drawWall(ctx: any, i: any, j: any) {\n    myDrawManager.getDrawElements(ctx, \"wall\", this.tilePos(i, j));\n  }\n\n  drawFloor(ctx: any, i: any, j: any) {\n    myDrawManager.getDrawElements(ctx, \"floor\", this.tilePos(i, j));\n  }\n\n  drawTorch(delta: any, ctx: any, i: any, j: any) {\n    this.drawWall(ctx, i, j);\n    const animationOffset = Math.floor(Math.random() * 8);\n    myDrawManager.getDrawElements(\n      ctx,\n      \"torch\",\n      this.tilePos(i, j),\n      delta,\n      animationOffset\n    );\n  }\n\n  keyboardEvent() { }\n\n  update() { }\n\n  draw(delta: any, ctx: any) {\n    for (let i = 0; i < this.map.length; i += 1) {\n      for (let j = 0; j < this.map[i].length; j += 1) {\n        const cell = this.map[i][j];\n        if (cell === \"W\") this.drawWall(ctx, i, j);\n        if (cell === \"i\") this.drawTorch(delta, ctx, i, j);\n        if (cell === \".\" || cell === \"S\" || cell === \"e\")\n          this.drawFloor(ctx, i, j);\n      }\n    }\n  }\n}\nexport const myMap = new Map();","import { myDrawManager } from \"../effects/DrawManager\";\nimport { Point } from \"../types/Point\";\nimport { myGameMaster } from \"./GameMaster\";\n\nexport class Chest {\n  position: Point;\n  headerPosition: {};\n  value: string;\n  num: number;\n  isChestOpen: boolean\n  constructor(position: Point, value: string, num: number, isChestOpen: boolean) {\n    this.position = { x: position.x, y: position.y };\n    this.headerPosition = { x: 10, y: 10 };\n    this.value = value;\n    this.num = num;\n    this.isChestOpen = isChestOpen;\n  }\n\n  draw(delta: any, ctx: any) {\n    // if (myGameMaster.start) {}\n    if (this.isChestOpen || myGameMaster.debug) {\n      myDrawManager.getDrawElements(ctx, \"openChest\", this.position, delta);\n      switch (this.value) {\n        case \"AA\":\n          myDrawManager.getDrawElements(ctx, \"rock\", this.position, delta);\n          myDrawManager.getDrawHeaders(ctx, \"rock\", this.num);\n          break;\n        case \"BB\":\n          myDrawManager.getDrawElements(ctx, \"water\", this.position, delta);\n          myDrawManager.getDrawHeaders(ctx, \"water\", this.num);\n          break;\n        case \"CC\":\n          myDrawManager.getDrawElements(ctx, \"fire\", this.position, delta);\n          myDrawManager.getDrawHeaders(ctx, \"fire\", this.num);\n          break;\n        default:\n          break;\n      }\n    } else {\n      myDrawManager.getDrawElements(ctx, \"closedChest\", this.position);\n    }\n  }\n}\n","import { myGameMaster } from \"./GameMaster\";\nimport { myMap } from \"./Map\";\nimport { Chest } from \"./Chest\";\n\nclass ChestManager {\n  chests: Array<Chest>;\n  latestOpenedChest: string;\n  chestInfo: []\n  constructor() {\n    this.chests = [\n      // position,ID,num,head,color\n      new Chest(this.chestStartOptions(), \"AA\", 0, false),\n      new Chest(this.chestStartOptions(), \"AA\", 1, false),\n      new Chest(this.chestStartOptions(), \"BB\", 0, false),\n      new Chest(this.chestStartOptions(), \"BB\", 1, false),\n      new Chest(this.chestStartOptions(), \"CC\", 0, false),\n      new Chest(this.chestStartOptions(), \"CC\", 1, false),\n    ];\n    this.latestOpenedChest = \"\";\n    this.chestInfo = [];\n    return this;\n  }\n\n  update(deltaSeconds: any) { }\n\n  keyboardEvent(key: any) { }\n\n  draw(delta: any, ctx: any) { }\n\n  chestStartOptions() {\n    let availablePositions = [];\n    availablePositions = myMap.getRandomLocations(\"chest\");\n    let random = 0;\n    random = Math.floor(Math.random() * availablePositions.length);\n    return availablePositions[random];\n  }\n\n  checkChestsStatus() {\n    myGameMaster.allChestsOpen = this.chests.every((e) => e.isChestOpen === true);\n  }\n}\nexport const myChestManager = new ChestManager();\n","module.exports = require('./helpers/bundle-url').getBundleURL('aYtYf') + require('./helpers/bundle-manifest').resolve(\"lBejV\");","/* eslint-disable no-restricted-properties */\nimport { Point } from \"../types/Point\";\nimport { myGameMaster } from \"./GameMaster\";\n\nconst linkIMG = require(\"../../public/images/link.png\");\n\nconst POS: any = {\n  0: {\n    currentSequence: \"right\",\n    speedX: myGameMaster.heroSpeed,\n    speedY: 0,\n  },\n  1: {\n    currentSequence: \"left\",\n    speedX: -myGameMaster.heroSpeed,\n    speedY: 0,\n  },\n  2: {\n    currentSequence: \"up\",\n    speedX: 0,\n    speedY: -myGameMaster.heroSpeed,\n  },\n  3: {\n    currentSequence: \"down\",\n    speedX: 0,\n    speedY: myGameMaster.heroSpeed,\n  },\n};\n\nexport class Hero {\n  position: Point;\n  heroSize: number;\n  spritesheet: any;\n  sequences: Array<Object>;\n  framePos: number;\n  time: number;\n  currentSequence: string;\n  speed: Point;\n  hypoDirections: number[][];\n  abailablesDirections: number[][];\n  current_direction: number[];\n  stop: boolean;\n  map: any\n  constructor(position: Point, map: any) {\n    this.position = { x: position.x, y: position.y };\n    this.heroSize = 10;\n\n    this.spritesheet = new Image();\n    this.spritesheet.src = linkIMG;\n    this.sequences = [\n      { name: \"still-down\", numFrames: 1, ySeqPos: 0 },\n      { name: \"still-left\", numFrames: 1, ySeqPos: 1 },\n      { name: \"still-up\", numFrames: 1, ySeqPos: 2 },\n      { name: \"still-right\", numFrames: 1, ySeqPos: 3 },\n      { name: \"moving-down\", numFrames: 10, ySeqPos: 4 },\n      { name: \"moving-left\", numFrames: 10, ySeqPos: 5 },\n      { name: \"moving-up\", numFrames: 10, ySeqPos: 6 },\n      { name: \"moving-right\", numFrames: 10, ySeqPos: 7 },\n    ];\n\n    this.framePos = 0;\n    this.time = 0;\n    this.currentSequence = \"down\";\n    this.speed = { x: 0, y: 0 };\n\n    this.hypoDirections = [\n      [1, 0],\n      [-1, 0],\n      [0, -1],\n      [0, 1],\n    ];\n    this.abailablesDirections = [];\n    this.current_direction = [];\n    this.stop = true;\n\n    this.map = map;\n  }\n\n  draw(delta: any, ctx: any) {\n    // if (myGameMaster.start) {}\n    const frameSize = { x: 120, y: 130 };\n    const seqName =\n      this.speed.x === 0 && this.speed.y === 0\n        ? `still-${this.currentSequence}`\n        : `moving-${this.currentSequence}`;\n    const seq: any = this.sequences.find((s: any) => s.name === seqName);\n    if (!seq) throw new Error(\"invalid seq\");\n\n    // void ctx.drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n    ctx.drawImage(\n      this.spritesheet,\n      frameSize.x * this.framePos,\n      frameSize.y * seq.ySeqPos,\n      frameSize.x,\n      frameSize.y,\n      this.position.x - 12,\n      this.position.y - 23,\n      frameSize.x - 95,\n      frameSize.y - 95,\n    );\n\n    // ctx.beginPath();\n    // ctx.arc(this.position.x, this.position.y, 3, 0, 2 * Math.PI);\n    // ctx.closePath();\n    // ctx.fill();\n\n    this.time += delta;\n    if (seq.numFrames === 1) {\n      this.framePos = Math.floor(this.time * 3) % seq.numFrames;\n    } else {\n      this.framePos = Math.floor(this.time * 10) % seq.numFrames;\n    }\n\n    this.killSkeleton();\n  }\n\n  update(deltaSeconds: any) {\n    if (myGameMaster.allChestsOpen) {\n      this.currentSequence = \"down\";\n      this.speed = { x: 0, y: 0 };\n    } else {\n      if (this.current_direction.length < 1) {\n        this.setDirection();\n      }\n      this.getMove(deltaSeconds);\n    }\n  }\n\n  getAbailablesDirections() {\n    let tip = {};\n    const abailablesDirections = this.hypoDirections;\n    return abailablesDirections.filter((e, i) => {\n      tip = {\n        x: this.position.x - abailablesDirections[i][0] * this.heroSize,\n        y: this.position.y - abailablesDirections[i][1] * this.heroSize,\n      };\n      const tile = this.map.tile(tip, abailablesDirections[i]);\n      if (tile !== \"W\" && tile !== \"i\") {\n        return abailablesDirections[i];\n      }\n    });\n  }\n\n  setDirection() {\n    this.abailablesDirections = this.getAbailablesDirections();\n    let random = 0;\n    random = Math.floor(Math.random() * this.abailablesDirections.length);\n    this.current_direction = this.abailablesDirections[random];\n  }\n\n  getMove(deltaSeconds: any) {\n    const currentDir = (e: any) => e === this.current_direction;\n    const objectToDraw = POS[this.hypoDirections.findIndex(currentDir)];\n\n    const { currentSequence, speedX, speedY } = objectToDraw;\n\n    this.currentSequence = currentSequence;\n    this.speed.x = speedX;\n    this.speed.y = speedY;\n    this.nextTile(deltaSeconds);\n  }\n\n  nextTile(deltaSeconds: any) {\n    const newPosX = this.position.x + this.speed.x * deltaSeconds;\n    const newPosY = this.position.y + this.speed.y * deltaSeconds;\n\n    const direction = this.current_direction;\n    const tip = {\n      x: this.position.x - direction[0] * this.heroSize,\n      y: this.position.y - direction[1] * this.heroSize,\n    };\n    const tile = this.map.tile(tip, direction);\n    if (tile !== \"W\" && tile !== \"i\") {\n      this.position.x = newPosX;\n      this.position.y = newPosY;\n    } else {\n      this.current_direction = [];\n    }\n  }\n\n  killSkeleton() {\n    let distance = 0;\n    distance = Math.sqrt(\n      Math.pow(this.position.x - myGameMaster.skeletonPosition.x, 2)\n      + Math.pow(this.position.y - myGameMaster.skeletonPosition.y, 2),\n    );\n    if (distance < 15) {\n      myGameMaster.isSkeletonDead = true;\n    }\n  }\n}\n","import { myGameMaster } from \"./GameMaster\";\nimport { myMap } from \"./Map\";\nimport { Hero } from \"./Hero\";\n\nclass HeroManager {\n  heroes: any\n  constructor() {\n    this.heroes = [];\n    return this;\n  }\n\n  update(deltaSeconds: any) { }\n\n  keyboardEvent(key: any) { }\n\n  draw(delta: any, ctx: any) { }\n\n  setHeroes() {\n    for (let i = 0; i < myGameMaster.heroNumber; i += 1) {\n      this.heroes.push(new Hero(this.heroStartOptions(), myMap));\n    }\n  }\n\n  heroStartOptions() {\n    let availablePositions = [];\n    availablePositions = myMap.getRandomLocations(\"hero\");\n    let random = 0;\n    random = Math.floor(Math.random() * availablePositions.length);\n    return availablePositions[random];\n  }\n}\nexport const myHeroManager = new HeroManager();\n","module.exports = require('./helpers/bundle-url').getBundleURL('aYtYf') + require('./helpers/bundle-manifest').resolve(\"7FNnd\");","import { myGameMaster } from \"./GameMaster\";\nimport { myChestManager } from \"./ChestManager\";\nimport { Point } from \"../types/Point\";\n// import { am } from \"../effects/AudioManager.js\";\n\nconst skeletonIMG = require(\"../../public/images/skeleton.png\");\n\nexport class Skeleton {\n  position: Point;\n  skeletonSize: number;\n  spritesheet: any;\n  sequences: Array<object>;\n  framePos: number;\n  time: number;\n  currentSequence: string;\n  speed: any;\n  map: any\n  constructor(position: Point, map: any) {\n    this.position = { x: position.x, y: position.y };\n    this.skeletonSize = 10;\n\n    this.spritesheet = new Image();\n    this.spritesheet.src = skeletonIMG;\n    this.sequences = [\n      { name: \"still-down\", numFrames: 2, ySeqPos: 2 },\n      { name: \"still-left\", numFrames: 2, ySeqPos: 1 },\n      { name: \"still-up\", numFrames: 2, ySeqPos: 0 },\n      { name: \"still-right\", numFrames: 2, ySeqPos: 3 },\n      { name: \"still-dead\", numFrames: 1, ySeqPos: 20 },\n      { name: \"still-dance\", numFrames: 5, ySeqPos: 14 },\n      { name: \"moving-down\", numFrames: 7, ySeqPos: 10 },\n      { name: \"moving-left\", numFrames: 7, ySeqPos: 9 },\n      { name: \"moving-up\", numFrames: 7, ySeqPos: 8 },\n      { name: \"moving-right\", numFrames: 7, ySeqPos: 11 },\n    ];\n    this.framePos = 0;\n    this.time = 0;\n    this.currentSequence = \"down\";\n    this.speed = { x: 0, y: 0 };\n\n    this.map = map;\n  }\n\n  draw(delta: any, ctx: any) {\n    const frameSize = { x: 64, y: 64 };\n    const seqName =\n      this.speed.x === 0 && this.speed.y === 0\n        ? `still-${this.currentSequence}`\n        : `moving-${this.currentSequence}`;\n    const seq: any = this.sequences.find((s: any) => s.name === seqName);\n    if (!seq) throw new Error(\"invalid seq\");\n\n    this.drawShadow(ctx);\n\n    // void ctx.drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n    ctx.drawImage(\n      this.spritesheet,\n      frameSize.x * this.framePos,\n      frameSize.y * seq.ySeqPos,\n      frameSize.x,\n      frameSize.y,\n      this.position.x - 20,\n      this.position.y - 25,\n      frameSize.x - 25,\n      frameSize.y - 25\n    );\n\n    this.time += delta;\n    this.framePos = Math.floor(this.time * seq.numFrames) % seq.numFrames;\n\n    myGameMaster.skeletonPosition = this.position;\n    myChestManager.checkChestsStatus();\n  }\n\n  update(deltaSeconds: any) {\n    if (myGameMaster.isSkeletonDead && !myGameMaster.debug) {\n      this.currentSequence = \"dead\";\n      this.speed = { x: 0, y: 0 };\n      this.framePos = 5;\n    } else if (myGameMaster.allChestsOpen && this.currentSequence !== \"dance\") {\n      this.currentSequence = \"dance\";\n      this.speed = { x: 0, y: 0 };\n      this.framePos = 2;\n    } else {\n      const newPosX = this.position.x + this.speed.x * deltaSeconds;\n      const newPosY = this.position.y + this.speed.y * deltaSeconds;\n\n      const direction = this.getDirection();\n      const tip = {\n        x: this.position.x - direction[0] * this.skeletonSize,\n        y: this.position.y - direction[1] * this.skeletonSize,\n      };\n\n      const tile = this.map.tile(tip, direction);\n      if (tile !== \"W\" && tile !== \"i\") {\n        this.position.x = newPosX;\n        this.position.y = newPosY;\n      }\n    }\n  }\n\n  getDirection() {\n    // Calculate direction based on speed\n    let direction = [1, 0];\n    if (this.speed.x !== 0 && this.speed.x < 0) {\n      direction = [-1, 0];\n    }\n    if (this.speed.y !== 0 && this.speed.y > 0) {\n      direction = [0, 1];\n    }\n    if (this.speed.y !== 0 && this.speed.y < 0) {\n      direction = [0, -1];\n    }\n    return direction;\n  }\n\n  keyboardEvent(key: any) {\n    switch (key) {\n      case \"ArrowLeft\":\n        this.currentSequence = \"left\";\n        this.speed.x = -100;\n        break;\n      case \"ArrowRight\":\n        this.currentSequence = \"right\";\n        this.speed.x = 100;\n        break;\n      case \"ArrowUp\":\n        this.currentSequence = \"up\";\n        this.speed.y = -100;\n        break;\n      case \"ArrowDown\":\n        this.currentSequence = \"down\";\n        this.speed.y = 100;\n        break;\n      case \"a\":\n        this.open();\n        break;\n      case \"A\":\n        this.open();\n        break;\n      default:\n        break;\n    }\n  }\n\n  keyboardEventUp() {\n    this.speed.x = 0;\n    this.speed.y = 0;\n  }\n\n  open() {\n    let distance = 0;\n    myChestManager.chests.forEach((ori) => {\n      distance = 0;\n      distance = Math.sqrt(\n        Math.pow(this.position.x - ori.position.x, 2) +\n        Math.pow(this.position.y - ori.position.y, 2)\n      );\n      // console.log(myChestManager.latestOpenedChest);\n      if (distance < 30 && !ori.isChestOpen) {\n        switch (myChestManager.latestOpenedChest) {\n          case \"\":\n            ori.isChestOpen = true;\n            myChestManager.latestOpenedChest = ori.value;\n            break;\n          case ori.value:\n            ori.isChestOpen = true;\n            myChestManager.latestOpenedChest = \"\";\n            break;\n          default:\n            myChestManager.chests.forEach((e) => (e.isChestOpen = false));\n            myChestManager.latestOpenedChest = \"\";\n            ori.isChestOpen = true;\n            myChestManager.latestOpenedChest = ori.value;\n            break;\n        }\n      }\n    });\n  }\n\n  drawShadow(ctx: any) {\n    if (this.currentSequence === \"dance\") myGameMaster.viewField++;\n    // Create a canvas that we will use as a mask\n    const canvas: any = document.getElementById(\"canvas\");\n    const maskCanvas: any = document.getElementById(\"canvasShadow\");\n    // Ensure same dimensions\n    maskCanvas.width = canvas.width;\n    maskCanvas.height = canvas.height;\n    const maskCtx = maskCanvas.getContext(\"2d\");\n    // This color is the one of the filled shape\n    maskCtx.fillStyle = \"black\";\n    // Fill the mask\n    maskCtx.fillRect(0, 38, maskCanvas.width, maskCanvas.height);\n\n    // Set xor operation\n    maskCtx.globalCompositeOperation = \"destination-out\";\n    // Draw the shape you want to take out\n    maskCtx.arc(\n      this.position.x,\n      this.position.y,\n      myGameMaster.viewField,\n      0,\n      2 * Math.PI\n    );\n    maskCtx.fill();\n\n    // Draw mask on the image, and done !\n    ctx.drawImage(maskCanvas, 0, 0);\n  }\n}\n","import { Point } from \"../types/Point\";\n\nexport class FPSViewer {\n  position: Point\n  constructor(position: Point) {\n    this.position = position;\n  }\n\n  keyboardEvent() { }\n\n  update() { }\n\n  draw(delta: any, ctx: any) {\n    const fps = (1 / delta).toFixed(2);\n    ctx.font = \"15px Arial\";\n    ctx.fillStyle = \"white\";\n    ctx.fillText(`FPS: ${fps}`, this.position.x, this.position.y);\n  }\n}\n","import { Point } from \"../types/Point\";\nimport { myGameMaster } from \"./GameMaster\";\n\nexport class Chronometer {\n  position: Point;\n  seg: number;\n  min: number\n  constructor(position: Point) {\n    this.position = position;\n    this.seg = 0;\n    this.min = 0;\n  }\n\n  keyboardEvent() { }\n\n  update() { }\n\n  draw(delta: any, ctx: any) {\n    if (!myGameMaster.isSkeletonDead && !myGameMaster.allChestsOpen) {\n      this.seg += delta;\n    }\n\n    let seg = Math.floor(this.seg);\n    if (this.seg < 10) {\n      seg = parseInt(`0${seg}`);\n    }\n    if (seg === 60) {\n      this.min += 1;\n      this.seg = 0;\n    }\n    const currentTimer = `Time: ${this.min}:${seg}`;\n\n    ctx.font = \"15px Arial\";\n    ctx.fillStyle = \"white\";\n    ctx.fillText(`${currentTimer} `, this.position.x, this.position.y);\n  }\n}\n","import { Point } from \"../types/Point\";\nimport { myGameMaster } from \"./GameMaster\";\n\nexport class UpperMessage {\n  position: Point\n  constructor(position: Point) {\n    this.position = position;\n  }\n\n  keyboardEvent() { }\n\n  update() { }\n\n  draw(delta: any, ctx: any) {\n    ctx.font = \"15px Arial\";\n    ctx.fillStyle = \"white\";\n    ctx.fillText(\n      \"Press 'a' to open the chests\",\n      this.position.x + 100,\n      this.position.y,\n    );\n    ctx.fillText(\n      `Level ${myGameMaster.currentLevel}`,\n      this.position.x + 300,\n      this.position.y,\n    );\n  }\n}\n","import { myChestManager } from \"./actors/ChestManager\";\nimport { myHeroManager } from \"./actors/HeroManager\";\nimport { myMap } from \"./actors/Map\";\n// import { myGameMaster } from \"./actors/GameMaster\";\n\nimport { Skeleton } from \"./actors/Skeleton\";\n\nimport { FPSViewer } from \"./actors/FPSViewer\";\nimport { Chronometer } from \"./actors/Chronometer\";\nimport { UpperMessage } from \"./actors/UpperMessage\";\n\n// import { AudioStatus } from \"./actors/AudioStatus\";\n// import { am } from \"../src/effects/AudioManager.js\";\n\nwindow.onload = () => {\n  const canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\n  const ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n\n  // Actors\n  const map = myMap;\n  myHeroManager.setHeroes();\n  const initialPos = map.GetDungeonStart();\n\n  const fps = new FPSViewer({ x: 5, y: 15 });\n  const chrono = new Chronometer({ x: 100, y: 15 });\n  const upperMessage = new UpperMessage({ x: 100, y: 15 });\n  // const audio = new AudioStatus({ x: 250, y: 15 });\n  const skeleton = new Skeleton(initialPos, map);\n\n  const actors = [\n    map,\n    fps,\n    chrono,\n    upperMessage,\n    // audio,\n    skeleton,\n    ...myChestManager.chests,\n    ...myHeroManager.heroes,\n  ];\n\n  // GAME LOOP -> BUCLE DE RENDERIZADO Y ACTUALIZACIÓN\n  let lastFrame = 0;\n  const render = (time: number) => {\n    const delta = (time - lastFrame) / 1000;\n    lastFrame = time;\n    actors.forEach((actor) => actor.update && actor.update(delta));\n    ctx.clearRect(0, 0, 650, 720);\n    actors\n      .sort((a, b) => a.position.y - b.position.y)\n      .forEach((actor) => actor.draw(delta, ctx));\n    window.requestAnimationFrame(render);\n  };\n\n  window.requestAnimationFrame(render);\n\n  document.body.addEventListener(\"keydown\", (e) => {\n    actors.forEach(\n      (actor) => actor.keyboardEvent && actor.keyboardEvent(e.key)\n    );\n  });\n  document.body.addEventListener(\"keyup\", (e) => {\n    actors.forEach(\n      (actor) => actor.keyboardEventUp && actor.keyboardEventUp(e.key)\n    );\n  });\n};\n"],"names":["$8b4d1930797b255e$export$6503ec6e8aabbaf","$8b4d1930797b255e$export$f7ad0328861e2f03","$8b4d1930797b255e$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$8c11561d3857b087$export$fb7ecc3c9ca5b0b8","$2b564c5eaef4dc1b$var$mode","heroSpeed","heroNumber","myDungeonMap","viewField","$2b564c5eaef4dc1b$export$56d3a63e83cfdb6f","this","currentLevel","skeletonPosition","allChestsOpen","isSkeletonDead","debug","update","deltaSeconds","keyboardEvent","key","draw","delta","ctx","$fd212956b064d411$var$PICTURES","rock","sheet","pos","x","y","size","dest","offset","water","fire","closedChest","openChest","wall","floor","torch","frames","module","exports","getBundleURL","resolve","$f29cd6c67ea13581$export$bdfd709ae4826697","$f29cd6c67ea13581$var$bundleURL","$f29cd6c67ea13581$var$getBaseURL","url","replace","value","err","matches","stack","match","$f29cd6c67ea13581$var$getBundleURL","$fd212956b064d411$var$SPRITESHEETS","dungeon","img","Image","src","$fd212956b064d411$var$loadSpriteSheet","$fd212956b064d411$export$406a7402962cd2a1","render_torch_time","getObject","objectName","objectToDraw","getDrawElements","objectName1","position","animationOffset","Math","drawFrame","drawImage","drawHalf","ctx1","objectName2","position1","half","getDrawHeaders","ctx2","objectName3","half1","headerPositionBase","typeOffset","$dec99b94dedca321$export$bd52af88c060dac","tileSize","rows","trim","split","map","row","GetDungeonStart","j","editedTilePos","getRandomLocations","element","availablePositions","push","tilePos","posToTile","tileAtIndex","tileIndex","error","tile","direction","facing","i1","j1","drawWall","i2","j2","drawFloor","i3","j3","drawTorch","i4","j4","random","delta1","ctx3","cell","$76f8c5ed15cc23f7$export$d2000f524695a9a0","num","isChestOpen","headerPosition","$48d50ed85c89266f$export$cb3396e391265454","chests","chestStartOptions","latestOpenedChest","chestInfo","checkChestsStatus","every","e","$14f67b097487bd52$exports","$44dc7b8b371e1fd2$var$POS","currentSequence","speedX","speedY","$44dc7b8b371e1fd2$export$887967f05dc521ae","heroSize","spritesheet","sequences","name","numFrames","ySeqPos","framePos","time","speed","hypoDirections","abailablesDirections","current_direction","stop","frameSize","seqName","seq","find","s","killSkeleton","setDirection","getMove","getAbailablesDirections","tip","filter","deltaSeconds1","findIndex","nextTile","deltaSeconds2","newPosX","newPosY","distance","sqrt","pow","$2859d4b42879f608$export$d7d6fb2946639bad","heroes","setHeroes","heroStartOptions","$0e8fd7b8d623ca35$exports","$70b86d3be1d3d91a$export$8f31e4c4a37b8e9c","skeletonSize","drawShadow","getDirection","open","keyboardEventUp","forEach","ori","canvas","document","getElementById","maskCanvas","width","height","maskCtx","getContext","fillStyle","fillRect","globalCompositeOperation","arc","PI","fill","$37691bb6273e74a0$export$13acb86b4b3ca30e","fps","toFixed","font","fillText","$e9310bb541b831a2$export$4fa45359d12c61eb","seg","min","parseInt","currentTimer","$c32b31c8ef054a6a$export$ff92cd5f42af05bd","window","onload","initialPos","actors","lastFrame","render","actor","clearRect","sort","a","b","requestAnimationFrame","body","addEventListener"],"version":3,"file":"index.8edb6abb.js.map"}