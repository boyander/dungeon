{"version":3,"sources":["src/actors/Chest.js","src/actors/Map.js","src/actors/ChestManager.js"],"names":["Chest","position","value","head","col","isChestOpen","x","y","color","spritesheet","Image","src","require","deltaSeconds","key","delta","ctx","selectImageChest","frameSize","drawImage","beginPath","arc","Math","PI","closePath","fill","fillStyle","stroke","dungeonMap","Map","tileSize","rows","trim","split","map","row","console","log","length","i","j","Error","availablePositions","push","floor","tileIndex","tile","error","direction","pos_to_tile","facing","tile_at_index","cell","draw_wall","draw_floor","ChestManager","chests","chest_start_options","latestOpenedChest","get_chests_start_options","random","myChestManager"],"mappings":"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","file":"ChestManager.edfdc78d.js","sourceRoot":"..","sourcesContent":["export class Chest {\n    constructor(position, value, head, col, isChestOpen) {\n        this.position = { x: position.x, y: position.y };\n        this.value = value;\n        this.head = head;\n        this.color = col;\n        this.isChestOpen = isChestOpen;\n\n        this.spritesheet = new Image();\n        this.spritesheet.src = require(\"../../public/images/dungeonStuffs3.png\");\n    }\n\n    update(deltaSeconds) {\n\n    }\n\n    keyboard_event(key) {\n\n    }\n\n    draw(delta, ctx) {\n\n        let selectImageChest = { x: 30, y: 18 }\n\n        let frameSize = { x: 240, y: 174 };\n        if (this.isChestOpen) {\n            frameSize = { x: 240, y: 208 };\n        }\n\n        ctx.drawImage(\n            this.spritesheet,\n            frameSize.x,\n            frameSize.y,\n            selectImageChest.x,\n            selectImageChest.y,\n            this.position.x-12,\n            this.position.y-18,\n            45,\n            30\n        );\n\n        ctx.beginPath();\n        ctx.arc(this.position.x, this.position.y, 3, 0, 2*Math.PI);\n        ctx.closePath();\n        ctx.fill();\n\n        ctx.fillStyle = this.color;\n        ctx.beginPath();\n        ctx.arc(this.head, 13, 8, (1.5 * Math.PI), (0.5 * Math.PI), this.value % 2 ? false : true);\n        ctx.closePath();\n        this.isChestOpen === true ? ctx.fill() : ctx.stroke()\n\n        if(this.isChestOpen){\n            ctx.fillStyle = this.color;\n            ctx.beginPath();\n            ctx.arc(this.position.x+15, this.position.y-10, 8, (1.5 * Math.PI), (0.5 * Math.PI), this.value % 2 ? false : true);\n            ctx.closePath();\n            ctx.fill();\n            ctx.stroke()\n        }\n\n    }\n}","let dungeonMap = `\nWWWWWWWWWWWWWWWWWWWWWWWWWWWW\nW..S.........WW............W\nW.WWWW.WWWWW.WW.WWWWW.WWWW.W\nW.WWWW.WWWWW.WW.WWWWW.WWWW.W\nW.WWWW.WWWWW.WW.WWWWW.WWWW.W\nW..........................W\nW.WWWW.WW.WWWWWWWW.WW.WWWW.W\nW.WWWW.WW.WWWWWWWW.WW.WWWW.W\nW......WW....WW....WW......W\nW.WWWW.WWWWW.WW.WWWWW.WWWW.W\nW.WWWW.WWWWW.WW.WWWWW.WWWW.W\nW.WWWW.WW..........WW.WWWW.W\nW.WWWW.WW.WWWWWWWW.WW.WWWW.W\nW.WWWW.WW.W......W.WW.WWWW.W\nW.........W......W.........W\nW.WWWW.WW.W......W.WW.WWWW.W\nW.WWWW.WW.WWW..WWW.WW.WWWW.W\nW.WWWW.WW..........WW.WWWW.W\nW.WWWW.WW.WWWWWWWW.WW.WWWW.W\nW.WWWW.WW.WWWWWWWW.WW.WWWW.W\nW............WW............W\nW.WWWW.WWWWW.WW.WWWWW.WWWW.W\nW.WWWW.WWWWW.WW.WWWWW.WWWW.W\nW...WW................WW...W\nWWW.WW.WW.WWWWWWWW.WW.WW.WWW\nWWW.WW.WW.WWWWWWWW.WW.WW.WWW\nW......WW....WW....WW......W\nW.WWWWWWWWWW.WW.WWWWWWWWWW.W\nW.WWWWWWWWWW.WW.WWWWWWWWWW.W\nW..........................W\nWWWWWWWWWWWWWWWWWWWWWWWWWWWW\n`;\n\nexport class Map {\n  constructor(tileSize = 23) {\n    this.spritesheet = new Image();\n    this.spritesheet.src = require(\"../../public/images/dungeonStuffs3.png\");\n\n    this.position = { x: 0, y: 0 };\n\n    this.tileSize = tileSize;\n    let rows = dungeonMap.trim().split(\"\\n\");\n    this.map = rows.map((row) => row.split(\"\"));\n    console.log(\"Map size\", rows[0].length, this.map.length);\n  }\n\n  get_dungeon_start() {\n    for (let i = 0; i < this.map.length; i++) {\n      for (let j = 0; j < this.map[i].length; j++) {\n        if (this.map[i][j] == \"S\") {\n          return {\n            x: this.position.x + this.tileSize * j + this.tileSize / 2,\n            y: this.position.y + this.tileSize * i + this.tileSize / 2,\n          };\n        }\n      }\n    }\n    throw new Error(\"Set the S for pacman start\");\n  }\n\n  get_chests_start_options() {\n    let availablePositions = [];\n    for (let i = 0; i < this.map.length; i++) {\n      for (let j = 0; j < this.map[i].length; j++) {\n        if (this.map[i][j] == \".\") {\n          availablePositions.push({ x: this.position.x + this.tileSize * j + this.tileSize / 2, y: this.position.y + this.tileSize * i + this.tileSize / 2 })\n        }\n      }\n    }\n    return availablePositions;\n  }\n\n  pos_to_tile(position) {\n    let i = Math.floor((position.x - this.position.x) / this.tileSize);\n    let j = Math.floor((position.y - this.position.y) / this.tileSize);\n    return [j, i];\n  }\n\n  tile_at_index(tileIndex) {\n    try {\n      let tile = this.map[tileIndex[0]][tileIndex[1]];\n      return tile;\n    } catch (error) {\n      console.log(\"out of bounds\");\n      return false;\n    }\n  }\n\n  tile(position, direction) {\n    let tileIndex = this.pos_to_tile(position);\n    let facing = [tileIndex[0] + direction[1], tileIndex[1] + direction[0]];\n    let tile = this.tile_at_index(facing);\n    return tile;\n  }\n\n  draw_wall(ctx, i, j) {\n    let frameSize = { x: 0, y: 16 };\n    ctx.drawImage(\n      this.spritesheet,\n      frameSize.x,\n      frameSize.y,\n      20,\n      18,\n      this.position.x + j * this.tileSize,\n      this.position.y + i * this.tileSize,\n      30,\n      30\n    );\n  }\n\n  draw_floor(ctx, i, j) {\n    let frameSize = { x: 64, y: 96 };\n    ctx.drawImage(\n      this.spritesheet,\n      frameSize.x,\n      frameSize.y,\n      20,\n      18,\n      this.position.x + j * this.tileSize,\n      this.position.y + i * this.tileSize,\n      30,\n      30\n    );\n  }\n\n  keyboard_event() { }\n  update() { }\n\n  draw(delta, ctx) {\n\n    for (let i = 0; i < this.map.length; i++) {\n      for (let j = 0; j < this.map[i].length; j++) {\n        let cell = this.map[i][j];\n        if (cell == \"W\") this.draw_wall(ctx, i, j);\n        if (cell == \".\" || cell == \"S\") this.draw_floor(ctx, i, j);\n        // if (cell == \"*\") this.draw_dot(ctx, i, j, \"super\");\n      }\n    }\n  }\n}","import { Chest } from \"./Chest.js\";\nimport { Map } from \"./Map.js\";\nclass ChestManager {\n    constructor() {\n        this.chests = [\n            //position,ID,num,head,color\n            new Chest(this.chest_start_options(), \"AA\", 375, \"red\", false),\n            new Chest(this.chest_start_options(), \"AA\", 380, \"red\", false),\n            new Chest(this.chest_start_options(), \"BB\", 410, \"blue\", false),\n            new Chest(this.chest_start_options(), \"BB\", 415, \"blue\", false),\n            new Chest(this.chest_start_options(), \"CC\", 445, \"green\", false),\n            new Chest(this.chest_start_options(), \"CC\", 450, \"green\", false)\n        ];\n        this.latestOpenedChest = \"\";\n        return this\n    }\n    update(deltaSeconds) {\n\n    }\n    keyboard_event(key) {\n\n    }\n    draw(delta, ctx) {\n\n    }\n    chest_start_options() {\n        const map = new Map;\n        let availablePositions = [];\n        availablePositions = map.get_chests_start_options();\n        let random = 0;\n        random = Math.floor(Math.random() * availablePositions.length);\n        return availablePositions[random]\n    }\n}\nexport const myChestManager = new ChestManager();"]}