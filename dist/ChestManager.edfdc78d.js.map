{"version":3,"sources":["src/actors/Chest.js","src/actors/ChestManager.js"],"names":["Chest","position","id","num","head","col","x","Math","floor","random","y","name","value","color","isChestOpen","spritesheet","Image","src","require","deltaSeconds","key","delta","ctx","selectImageChest","frameSize","drawImage","fillStyle","beginPath","arc","PI","closePath","fill","stroke","ChestManager","chests","latestOpenedChest","myChestManager"],"mappings":"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","file":"ChestManager.edfdc78d.js","sourceRoot":"..","sourcesContent":["export class Chest {\n    constructor(position,id, num, head, col) {\n        this.position = { x: Math.floor(Math.random() * (450)) + 1, y: Math.floor(Math.random() * (450)) + 1 };\n        this.id = id;\n        this.name = \"key\" + num + id;\n        this.value = num;\n        this.head = head;\n        this.color = col;\n        this.isChestOpen = false;\n\n        this.spritesheet = new Image();\n        this.spritesheet.src = require(\"../../public/images/dungeonStuffs3.png\");\n    }\n\n    update(deltaSeconds) {\n\n    }\n\n    keyboard_event(key) {\n\n    }\n\n    draw(delta, ctx) {\n\n        let selectImageChest = { x: 30, y: 18 }\n\n        let frameSize = { x: 240, y: 174 };\n        if (this.isChestOpen) {\n            frameSize = { x: 240, y: 208 };\n        }\n\n        ctx.drawImage(\n            this.spritesheet,\n            frameSize.x,\n            frameSize.y,\n            selectImageChest.x,\n            selectImageChest.y,\n            this.position.x,\n            this.position.y,\n            45,\n            30\n        );\n\n        ctx.fillStyle = this.color;\n        ctx.beginPath();\n        ctx.arc(this.head, 13, 8, (1.5 * Math.PI), (0.5 * Math.PI), this.value % 2 ? false : true);\n        ctx.closePath();\n        this.isChestOpen === true ? ctx.fill() : ctx.stroke()\n\n        if(this.isChestOpen){\n            ctx.fillStyle = this.color;\n            ctx.beginPath();\n            ctx.arc(this.position.x+15, this.position.y-10, 8, (1.5 * Math.PI), (0.5 * Math.PI), this.value % 2 ? false : true);\n            ctx.closePath();\n            ctx.fill();\n            ctx.stroke()\n        }\n\n    }\n}","import { Chest } from \"./Chest.js\";\nclass ChestManager {\n    constructor() {\n        this.chests = [\n            //position,ID,num,head,color\n            new Chest ({x:0,y:0},\"AA\",0,375,\"red\"),\n            new Chest ({x:0,y:0},\"AA\",1,380,\"red\"),\n            new Chest ({x:0,y:0},\"BB\",2,410,\"blue\"),\n            new Chest ({x:0,y:0},\"BB\",3,415,\"blue\"),\n            new Chest ({x:0,y:0},\"CC\",4,445,\"green\"),\n            new Chest ({x:0,y:0},\"CC\",5,450,\"green\")\n        ];\n        this.latestOpenedChest = \"\";\n        return this\n    }\n    update(deltaSeconds) {\n\n    }\n    keyboard_event(key) {\n\n    }\n    draw(delta, ctx) {\n\n    }\n}\nexport const myChestManager = new ChestManager();"]}