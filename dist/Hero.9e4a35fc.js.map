{"version":3,"sources":["src/actors/Hero.js"],"names":[],"mappingsfile":"Hero.9e4a35fc.js","sourceRoot":"..","sourcesContent":["// import { km } from './ChestManager';\n// export class Hero {\n//     framePos = 0;\n//     time = 0;\n//     constructor(initialPos) {\n//         this.origin = { x: initialPos.x, y: initialPos.y };\n\n//         this.spritesheet = new Image();\n//         this.spritesheet.src = require(\"../../dungeon/public/images/link.png\");\n//         this.sequences = [\n//             { name: \"still-down\", numFrames: 1, ySeqPos: 0 },\n//             { name: \"still-left\", numFrames: 1, ySeqPos: 1 },\n//             { name: \"still-up\", numFrames: 1, ySeqPos: 2 },\n//             { name: \"still-right\", numFrames: 1, ySeqPos: 3 },\n//             { name: \"moving-down\", numFrames: 10, ySeqPos: 4 },\n//             { name: \"moving-left\", numFrames: 10, ySeqPos: 5 },\n//             { name: \"moving-up\", numFrames: 10, ySeqPos: 6 },\n//             { name: \"moving-right\", numFrames: 10, ySeqPos: 7 },\n//         ];\n//         this.currentSequence = \"down\";\n//         this.speed = { x: 0, y: 0 };\n//     }\n\n//     draw(delta, ctx) {\n\n//         const frameSize = { x: 120, y: 130 };\n//         const seqName =\n//             this.speed.x == 0 && this.speed.y == 0\n//                 ? `still-${this.currentSequence}`\n//                 : `moving-${this.currentSequence}`;\n//         const seq = this.sequences.find((s) => s.name == seqName);\n//         if (!seq) throw new Error(\"invalid seq\");\n\n//         ctx.drawImage(\n//             this.spritesheet,\n//             frameSize.x * this.framePos,\n//             frameSize.y * seq.ySeqPos,\n//             frameSize.x,\n//             frameSize.y,\n//             this.origin.x,\n//             this.origin.y,\n//             frameSize.x-90,\n//             frameSize.y-90\n//         );\n//         this.time += delta;\n//         this.framePos = Math.floor(this.time * 10) % seq.numFrames;\n\n        \n//     }\n\n//     update(deltaSeconds) {\n\n//         let newPosX = (this.origin.x + this.speed.x);\n//         let newPosY = (this.origin.y + this.speed.y);\n\n//         if (\n//             // Left & right screen limits\n//             newPosX < 480 &&\n//             newPosX > 0 &&\n//             // Up and down screen limits\n//             newPosY < 475 &&\n//             newPosY > 0\n//         ) {\n//             this.origin.x = newPosX;\n//             this.origin.y = newPosY;\n//         }\n//     }\n\n//     keyboard_event(key) {\n//         switch (key) {\n//             case \"ArrowLeft\":\n//                 this.currentSequence = \"left\";\n//                 this.speed.x = -5;\n//                 // this.origin.x = this.origin.x - this.speed;\n//                 break;\n//             case \"ArrowRight\":\n//                 this.currentSequence = \"right\";\n//                 this.speed.x = 5;\n//                 //this.origin.x = this.origin.x + this.speed;\n//                 break;\n//             case \"ArrowUp\":\n//                 this.currentSequence = \"up\";\n//                 this.speed.y = -5;\n//                 // this.origin.y = this.origin.y - this.speed;\n//                 break;\n//             case \"ArrowDown\":\n//                 this.currentSequence = \"down\";\n//                 this.speed.y = 5;\n//                 // this.origin.y = this.origin.y + this.speed;\n//                 break;\n//             case \"a\":\n//                 this.open();\n//                 break;\n//         }\n//     }\n\n//     keyboard_event_up(key) {\n//         this.speed.x = 0;\n//         this.speed.y = 0;\n//       }\n\n//     open() {\n//         let distance = 0;\n//         console.log(\"hola\");\n//         km.keys.forEach((ori) => {\n//             distance = 0;\n//             distance = Math.sqrt(Math.pow(this.origin.x - ori.position.x, 2) + Math.pow(this.origin.y - ori.position.y, 2));\n\n//             if (distance < 30 && !ori.isChestOpen) {\n\n//                 switch (km.lastKey) {\n//                     case \"\":\n//                         ori.isChestOpen = true;\n//                         km.lastKey = ori.id;\n//                         break\n//                     case ori.id:\n//                         ori.isChestOpen = true;\n//                         km.lastKey = \"\";\n//                         break\n//                     default:\n//                         km.keys.forEach(e => e.isChestOpen = false);\n//                         km.lastKey = \"\";\n//                         ori.isChestOpen = true;\n//                         km.lastKey = ori.id;\n//                         break\n//                 }\n//             }\n//         });\n//     }\n// }"]}