{"version":3,"sources":["src/effects/DrawManager.js","src/actors/Chest.js","src/actors/Map.js","src/actors/ChestManager.js","src/actors/Hero.js","src/actors/HeroManager.js","src/actors/FPSViewer.js","src/actors/Chronometer.js","src/effects/AudioManager.js","src/actors/AudioStatus.js","src/actors/Skeleton.js","src/app.js"],"names":["DrawManager","spritesheet","Image","src","require","render_torch_time","render_torch_count","ctx","element","picture","position","i","j","tileSize","delta","frames","sourcePos","sourceSize","destinationPos","destinationSize","x","y","Math","floor","drawImage","value","num","myPosition","myDrawManager","Chest","isChestOpen","deltaSeconds","key","get_draw_elements","get_draw_headers","dungeonMap","Map","spritesheet2","rows","trim","split","map","row","console","log","length","time","count","Error","availablePositions","push","tileIndex","tile","error","direction","pos_to_tile","facing","tile_at_index","draw_wall","cell","draw_torch","draw_floor","ChestManager","chests","chest_start_options","latestOpenedChest","get_random_locations","random","myChestManager","Hero","heroSize","sequences","name","numFrames","ySeqPos","framePos","currentSequence","speed","current_direction","frameSize","seqName","seq","find","s","hypoDirections","tip","abailables_directions","HeroManager","heroes","hero_start_options","myHeroManager","FPSViewer","fps","toFixed","font","fillStyle","fillText","Chronometer","seg","min","currentTimer","AudioManager","myAudioManager","AudioStatus","Skeleton","skeletonSize","newPosX","newPosY","get_direction","open","distance","forEach","ori","sqrt","pow","e","window","onload","canvas","document","getElementById","getContext","set_map","initialPos","get_dungeon_start","chrono","audio","skeleton","actors","lastFrame","render","actor","update","clearRect","sort","a","b","draw","requestAnimationFrame","body","addEventListener","keyboard_event","keyboard_event_up"],"mappings":";;AWAA;;AACA;;AACA;AFFA,ARAA,AEAA,AEAA,AHAA,AQAA;ACGA;ARFA,AEAA,IGDaqG,eACX,wBAAc;AGGhB,AHHgB;AAEb;AGEH;IJLaJ,ADAAN,ANAP3F;AOCF,ADAA,AKKJ,AHAO,ARLL,IQKWsG,cAAc,GFLX5F,AEKc,EDLdA,ECKkB2F,ARLlB,IMAZ,ECAA,ADAsB,ECAA,ICKI,EAAvB;ADLmB,ADAA,AJA1B,AQAA,AVAgB,ISAHE,ARAA1E,AGDAwC,AFCTlC,UAAU,y6BAAd;AOCE,ARAE,AGCA,IMDSqE,YNCG9F,CHDAA,MQAFA,CLCV,CHDA,CGCsB+B,CHDAhB,EGCtB,EKDF,ALC6B,CHD3B,CQAoB,CRASC,GAA7B,EAAkCI,WAAlC,EAA+C;AQA3B,ARA2B,AMA3C,ADAA,AFCuB,AMC3B,AVFA,IGAEgC,AEAAyB,AHiCOnD,KKjCA1B,ADAAA,ANAJT,QOAD,ADAA,GCAgBS,ADAAA,AIERA,AVFZ,GAAmB,IAAIR,COAnB,ADAA,AIEJ,EAAsBuC,EVFH,CUEnB,CVFA,CUE2B;APD3B,AIAI,ADAH,ADCD,AHgCF,AQhC6B,AVD3B,SOASyD,APAJjG,GOAD,GAAW,CAAX,CLiCqB,GFjCzB,CAAiBE,GAAjB,CKCc,CFDA,CHASC,OAAO,CAAC,wCAAD,CAA9B;ASAA,ARAI,AEAU,AICV,AHDuB,ACCb,AHgCW,AF/BzB,QE+BUS,COjCLH,ARAIA,AMCAyF,APCJ9F,GODD,GAAW,CAAX,ALgCqB,COjCzB,ARAI,GQAYK,ARAI,MDEpB,ESFA,CTEyB,CAAzB,QIJW,CAEgB,gDFiCN,EAAI;AOhC1B,ARDuBU,AMErB,AGAG,AVCJ,MCHsBA,CAAC,EAAEV,ASEhBA,AVCJJ,QCH4B,ASE7B,CTF8Bc,CAAd,CSEA,OVCpB,GAA0B,CAA1B;ACHqCC,AECjC,ACDuB,ACEvB,AH+BqB,AQ/BHD,AVEvB,MCJsCC,ASEfD,CTFgB,ASEf,ETFiBV,AEC/BqD,AECAyB,AKAgB9E,MPDrB,AECA,EJF4C,ASEf,CTFgBW,AEC/B,AECA,AKAgBD,CPA1B,AECA,AKDY,eNHb,CACoB;AHAP,AEGZ,AECA,AKF6BC,KTFjC,CSEiCA,CAAC,CPC1BQ,AECAwC,CKF4B3D,QAAQ,CLExC,AKFyCW,CLEhC,CFDT,CAAU,GECIoE,EFDCzB,WGDN,CAEhB,IDAgB,EAAT,CFDU,CEC0B,CFDpC,EAAsC,CECE5B,GFDxC,EAA4C,CAA5C,EAA+C,AECX,EAApC,CAFU,EFCV,AEEA,CFJU,EAGV,CECIiC,GFDAxC,OECJ,CAAS,IFDT,CAAU,AECI4D,KFDCzB,aECN,EAAT,EAAoC,EFD1B,EAAV,AECwC5B,EFDF,IAAtC,EAA4C,AECR,CFDpC,CECA,CFD+C,AEFrC,EAIV,GFFA,CAHU,AEKNiC,EFDJ,IAAIxC,IECJ,CAAS,KAAK4D,EFDd,CAAU,KAAKzB,UECN,EAAT,EAAoC,IAAI5B,CFD9B,EAAV,EAAsC,GECF,CFDpC,CECA,CFD4C,AEHlC,CFGV,CEEA,CFF+C,GEE3CiC,EFFJ,CAJU,EAKV,IAAIxC,CECJ,CAAS,KAAK4D,KFDd,CAAU,KAAKzB,OECN,EAAT,EAAoC,IAAI5B,IFD9B,EAAV,EAAsC,AECF,EAApC,CALU,CFIV,AEJJ,EFIgD,CAA5C,EAA+C,KAA/C,CALU,EAMV,IAAIP,YAAJ,CAAU,KAAKmC,mBAAL,EAAV,EAAsC,IAAtC,EAA4C,CAA5C,EAA+C,KAA/C,CANU,EAOV,IAAInC,YAAJ,CAAU,KAAKmC,mBAAL,EAAV,EAAsC,IAAtC,EAA4C,CAA5C,EAA+C,KAA/C,CAPU,CAAd;AFAA,AESA,ACTA,ACQA,AHyBJ,AQhCoB,KAAhB,ITDKvC,AESAwC,ACTAvD,AFiCJT,EGzBM,GJRP,CIQA,EJRawB,AGAb,GAAgB,AFiCpB,EDjCI,CCiCe,GCxBf,CDwBmBvB,ECxBM,EAAzB,CDwBe,EAAnB;ADhCI,AESA,ACVkBkB,ACSrB,AHyBD,AQhCI,MNFkBA,CAAC,EHCdM,AGDgBhB,AFkCpBT,AQhCIwG,EPQE,CFTP,GAAW/E,AESX,ECV6B,CHC7B,AGD8BN,CAAd,CFkCpB,CAAiBjB,AQhCb,GRgCJ,AQhCwB,EAApB,CRgCmBC,OAAO,CAAC,EOjChB,AFEE,CEAlB,AFAqB,qCL+BU,CAA9B;ADhCI,AESH,ACXoCiB,AFoCrC,AQhCI,MNJiCA,CAAC,EHE7BS,AGF+BpB,AFoCnC2B,AQhCIpC,QNJuC,CAACoB,EHE7C,ASEA,CRgCJ,EDlCuBS,ASEA,CRgCH,GQhCO5B,CRgCHA,CIhCf,CAER,EIFsB,CRgCH,CDlChB,ASEA,CRgCJ,GF/BgBK,KAAKC,SAASC,SAASC,UAA8D;ACFpG,AGHmB,AFqCpB,AQhCI,AVAiG,KILjG,IFqCC2B,AQhCIpC,CVAwCU,CAAoD,SUAjG,CRgCJ,AQhCqBR,CRgCHA,EQhCd,CRgCJ,EQhC2BC,CRgCHA,MQhCU,CRgCH,AQhCI,CRgCH,iCQhCE,CAA9B,KRgC2B,CAA/B,MFhCqD,CAAgD;AIJjG,AFsCJ,AQjCI,AVDiG,SIJ5FkE,AFsCJ5D,AQjCI6D,CVD+C3D,CAA6C,MIJjG,AFsCJ,CQjCI,ENLgB,AFsCJ,CQjCK,CNLjB,AMMI,ODHD,AFAE,CEEV,AFFa,oDPCgD,CAAyC;AIFjG,AFoCcQ,AQhCRoD,ACJd,AXEyG,MEkCnFpD,AQhCRoD,CRgCS,EEpCVvE,AFoCY,CAAL,AQhCF,AVFiDY,EUE/C,MVFqF,EIFjG,GAAmB,CMIf,CJAHC,EFJsBZ,ACOpB6B,KCHKxB,AFJW,EAAnB,GEIa,IDGI,CAEpB,+CLPyE,CAA2B;AMGjG,AFJA,AFmCoBc,AQhCMoD,ACDlC2C,AXDyG,MEkC7E/F,AQhCMoD,ACD5B,CTiCuB,ASjCtB4C,EPFMpH,AFmCkB,CI/BjB2F,ANHmE9E,GMGhE,AKFjB,EDC2C,AVF8D,CMGrF,AKFJ,CLEK,AIDwB,CAAjC,ENHJ,CEIiBA,AFJAX,GAAjB,EEIY,CHIT4B,ACRoB3B,CEICyF,AKFV,MPFgB,CEIlB,AFJmB,CEIC,CAApB,CAAZ,GHIiB,CAEpB,uBCViC,CAA9B,oBJCiF,CAAgB;AMIjGtF,AFJA,AFkCY,AQhC4BmE,ACC5C/B,AXHqG,EWGrGA,GT+BA,CI9BIpC,AIFwCmE,GJErC,AFJEH,AOGF,CLCCuB,AKDAlD,AXHgF7B,GUErC,ACCnD,CLCI,AKDQ,CDDyC,CVFgD,CMItF,CFJX,GAAiB,AOGrB,CPFQ,GKCLD,AFFEA,ENAEiB,EKIH,GGFMxB,AFFEA,KEEG,AFFE,CEGjB,GRHqB,CAEpB,6CDFgG,EAAI;ASIrG,AFFI,ADGAA,AFJMiE,AFmCV,AQlCQ,ACGR,AXHA,KUDqB,CJIjBjE,AFJMiE,AOIJ8C,CDFE,EJED,AJ+BFzG,CI/BGkF,AFJM,AJCV/E,COAKkF,CHDO,AOIJ,EJHR,CIGWqB,ET+Bf,CKlCgBzG,CDGZ,ANHJ,CEkCgBD,CFlCDI,CMGK,CCHhB,AIGmB,CPJf,AOIgBuG,IT+BxB,CI/BI,ENHJ,EAA2BtG,EKMZc,GMHA,CAAwB,CNGnB,CAEnB,MMLc,AXHf,CWGA,CXH2Cb,eAA3C,CAFqG,CAGrG;ASEA,AFFI,ADGAZ,AFL0BkE,AFoC9B,AQlCUD,ACGV,MLAIjE,AFL0BkE,AMEpBD,ACGJjE,ET+BF+B,CI/BG,AKAE,CJHD4D,ADGAF,AIHM,ERkCN,AQlCQ,ACGJsB,CJHD,EHF4B,AFoC5BnF,CKlCGb,CHF2B,CEKrC,AFLI,AOKU,CAACmG,CJHD,CAAClG,GGAX,CRkCa,CKlCP,ALkCQgB,CKlCG,EIGb,CT+BD,AS/BmB,EJHA2D,CLkCD1D,CI/BJoD,AKAb,CRIG5D,AIPD,AIGd,CJHI,AIFc,CLKd,AKEJ,CT6BW,CAAwB,CC3Bf,AGJY,CHM/B,EDyBU,CAAX,CI/BqCtB,QAAL,CAAcU,CAA1C,EAA6C,KAAKV,QAAL,CAAcW,CAA3D;AGAJ,AFFI,ADGH,AFN2CqD,AFqC5C,AQnC8BD,AVE9B,MIJ4CC,AMEdD,GRmCzBhC,CKlCG2D,ELkCR,CErCmD,CJI3C5F,CIJ6C,AFqC1C8B,AQnC4B,EAAE,CAAjC,CRmCO,CAACG,CFjChB,CODoB,CLkCT,CAAS,UAACC,CDlCNV,ECkCK,GDlCA,CAEnB,AMF+B,KAAKmE,GAAjB,cAAwBD,GAAxB,cAAhB;AEGJ,ALNQ,AFqCY,AQnCwBxB,ACM5C,AXHE,KINmB,CMGuBA,ACMxCjC,CPPI,EOOD,GAAG,CT6BmBC,AQnCsB,AVG5C,EUH8C,CRmCrB,AS7BlBN,CT6BmBI,GFhC/B,EEgC2B,CAAU,CS7B7B,CNEL1B,AH2BwB,CAAT,AS7BpB,MNEYP,KAAK,CAEhB;AILD,AFHI,AHHMiE,AFoCU,AQnCZ,AVIJ/D,KE+BO,AQrCU,CNCX+D,AFoCV,CQlCQ,GHCA0B,AHHM,AJKVzF,EILY,CGGL,IAAI,APEJ,EOFP,EAAe,APEJ,GILP,CDWHK,OAAOP,EHNR,GGMa,AHNcS,CGQ9B,QHRuC,GAAG;ASE3C,AFJqB,AHHSyD,AFqC9B9B,AQnCU6B,ACMVJ,AXH6ChD,IEgC7CuB,EErC8B8B,AMEpBD,IAAI,CRmCP,CAAC5B,AQnCQ,AVG6BxB,COFnB+E,APEoB,EILP,AFqCvC,AFhCgD,COF3B,ALkCT,CErC6B,CAAjC,AJKmC,IUHnC,GTIHrF,CC+BL,EAAwBwB,GS7BToF,CVFHnH,AC+BgB,CAAC,CAAD,CAAJ,CAAQsC,CD/Bf,CUEjB,CAAuBJ,GT6BvB,AS7BA,ET6BwC,KAAKA,GAAL,CAASI,MAAjD;AO7BD,ARAK,AML6B,AHHW6B,AFuC5C,AQrC4BD,AVGyBpD,MILTqD,AMEhBD,GRqCvB3B,CD/BG,EDH6CzB,COFf6E,AHHa,AFuCnD,AFlCsD,ECGzCpE,AGRwC,AMEhB,AVGmB,COFvB,ALoCrB,CAAZ,AQrCuC,CAA/B,CHCoC,CAAX,MNK7B,EAAsB,aIIL;AJHbF,AMNwC,AHHxC,ACaJ,AH2BJ,AQtC0C8C,ACO1C,AXJ2C,KIPtB,CMIqBA,ACOtCiD,CPRI,EFuCH5E,CG3BKN,CLRN,EKQS,AKXoC,CRsCjD,AFnCgEzB,CUHb,CLWnC,AMJF,CT+BD,CAAb,CS/BiByB,CNIGL,EMJA,CAACwF,AXJoD,GAAG,EGSpEnF,AEDQ,EAAZ,GFCQ,EFLUR,KUAL,EAAjB,UVAQ,CAAgC1B,GAAhC,EAAqC,OAArC,EAA6C,WAA7C,EAA0D,KAAKG,QAA/D;AEMJ,ACdM8D,ACaN,AH2BL,AQvCS,ACSR,AXN8EpD,KUNzD,CNEXoD,AOUNoB,CDRI,ECQD,CPVO,ACaN3C,CFCCR,CCdO,AOUN,AXNoErB,CAAC,CGU3E,CHV6E,CWMnEuE,CRIClD,CHV6D,EGUxE,ECdI,MCakB,GAAG,EAAzB,GMHM,CAAc;AVDhB,AEMP,AIXGlC,AHJwBkE,ACcxBxB,AKZMuB,ACQgBpD,AXN4DC,IWM5DD,CAAC,CJNvBb,AHJwBkE,ACcxBxB,AKZMuB,CCQmB,CAAL,CJNjB,CAACsB,AGFM,EAAE,AVEsEzE,CAAC,COAnF,CHJiC,AJIoD,CCKzE,CMLD,AHJwB,CAA/B,GHSaI,GIKC,CKZd,CTOA,CIKiBgB,EEVrB,CFUwB,CAACyB,oBAAJ,EAArB;AJJQ,AMLR3D,AHLsCmE,ACetC,AKb2BD,ACQCpD,AXN4C,IWM5CA,CAAC,CJL7Bd,AHLsCmE,AMEXD,CCQI,EJL5B,CAACsB,AFUA5B,CLXJ,EIJ6C,EHUhC,AGVkC,AMEX,CLa1B,CKb4B,CAAlC,CTQI,AMLR,AFUa,CAAb,EEVgB,OAAhB;ANMYvC,AMLZrB,AHNI,ACgBJ4D,AKdyCO,ACQrB,AXLpBzD,GWKM,CAAV,CPbqB,CGSjBV,AFUA4D,AKdyCO,CNDrC,EGKD,CAACsB,APDJ/E,EKWM,CKd0C,ELcvCK,AKdyC,GHIlD,CFUa,CAACC,ALXJ,GAAG,EKWJ,CAAWD,GEVJ8E,CFUQ,CAACjC,MAAL,EJLMlC,EML1B,CFUoCgB,EEVJ,KAAKvC,ONKzB,CAAgCH,AMLZ,CAAca,CAA9C,CNKY,AIK0C,CEVL,AFUMyB,CJLN,IMLKnC,CFU7C,CAAT,IJLY,EAAgD,AMLX,CAAcW,CAA/D,INKY,EAAwD,KAAKX,QAA7D;AMHf,AHPS8D,ACgBN,AKfI,ACSR,AXNmBpD,KUPE,CNGXoD,AOUNqD,CDRI,GNFM,EAAE,AOUN,AXNSzG,CKYR6B,ALZS,EWMP,AXNS,EAAL,EWMAgD,MPVT,MCgBqB,CAAC9B,MAAD,CAAzB,CHyBc,EC1BI,CQLT,CAAgB;AVCbvC,AEKZ,AChB2B6C,ACiB9B,AHyBD,AQxCUD,ACQqBpD,AXNLC,IWMKD,CAAC,CPVDqD,AMErBD,CCQwB,GRMxB/B,AOdI,ACQe,CTgCxB,CQxCW,AVEUpB,CGYb,AHZc,EIJa,AF0C/BV,AFtCoB,CGYb,AD0BN,CE1CgC,CAAlC,CF0CK,CC1BOyB,AD0BpB,EAAgBzB,CAAC,EQxCT,CRwCY,EC1BJ,EAAZ,CD0BqB8B,GAAL,CAASI,ID/BCX,EC+B9B,EAAqCvB,CAAC,EAAtC,EAA0C,OD/B1B,CAA+BJ,GAA/B,EAAmC,IAAnC,EAAwC,KAAKmB,GAA7C;AEMZ,ACjByCgD,AF2C3C,AQzC6BD,ACQQpD,AXNtB,IWMsBA,CAAC,CPVKqD,AMEdD,CCQW,GROlCxB,CHbJ,EIJgD,AF2C7C,EE3C+C,AMEd,ERyC7BrC,AQzC+B,CRyC9B,AQzCJ,GRyCO,CAAb,EAAgBA,CAAC,GC1BO,AD0BJ,GC1BO,EAAzB,AD0BuB6B,GAAL,CAAS9B,CAAT,EAAYkC,MAAhC,EAAwCjC,CAAC,EAAzC,EAA6C;AD/B/B,AEMZqC,AClBI,AF4CJ,AQ1CyCyB,ACQhB,AXLzBxD,GWKS,CAAb,CPdqB,CDsBjB+B,AOhByCyB,CNDrC,GJIJxD,GUHgD,CR0C5C,CQ1C8C,IR0CzCuB,GAAL,CAAS9B,CC1BK,AD0Bd,AFvCU,EEuCEC,CC1BK6B,AD0BjB,AFvCa,GGaO,CAACyB,CD0BH,GAAtB,EAA2B,cC1BN,EAArB;AACA,AClBMM,AF4CJ,AQ3CE,ACSR,AXNuBpD,KURF,CNIXoD,AOUNsD,CDRI,GPgBA3D,AClBM,COUL,CPVO,AJIO/C,CAAC,CWMZ,CXNeV,CGcb,EQRE6F,CRQC,AD0BJ,CC1BT,GHd+B,CAACnF,CIJ5B,AJImB,GAAa,EAAnB,YWMT,CAAgB;AVEhB,AEOR+C,ACnB2BM,AF6CvBrD,AQ3CEoD,ACQoBpD,AXNeC,IWMfD,CAAC,CRS3B+C,ACnB2BM,AMErBD,CCQuB,GDRnB,ACQc,ERSlB,AOjBM,AVE6BnD,CAAC,CEyCtCD,CDjCS,AEOJE,ACnB2B,AF6C/B,AFzCwCZ,EIJP,AF6C/B,EDjCC,AEOK,ACnBT,CDmBUa,ED0BFb,CFzCyC,CAACW,CGe7C,AOjBL,AVEyC,CGezBC,EHfsC,EGelC,AD0BjB,CC1BkB6C,AD0BJ/C,CAAd,GAAkB,EC1BL,GD0BUP,EC1BMoC,MD0BX,GAAgBrC,CAAlC,GAAsC,KC1BS,AD0BJC,CC1BKgC,MAA9C,CAAT,AD0B6C,GAAgB,CADpD;AD/BGjB,AEOZ,ACpB0C8C,AF8CtCrD,AQ5CuBoD,ACQOpD,AXNjB,IWMiBA,CAAC,CPVOqD,AMEfD,CCQU,IXNrC,EGgBOxB,ACpB0C,CF8C7C5B,CE9C+C,AF8C9C,AQ5C+B,ER4C7B,AQ5C+B,CAAlC,IR4CQX,QAAL,CC1BkB,AD0BJW,CC1BK8C,AD0BnB,GAAkB,GC1BA,CFPClC,AEO1B,CD0B8BpB,QAAL,GAAgBF,CAAlC,GAAsC,CDjCjC,CAAgCJ,GAAhC,ACiCsCM,EDjCD,MCiCJ,GAAgB,CDjCjD,EAAgD,OAAhD,EAAyD,KAAKH,QAA9D;AEQf,ACrBO,ACkBL,AH0BU,AQ1CgCgE,ACQjB,AXLxBvD,GWKQ,CNQHuE,AMRT,CPfqB,CMOwBhB,CNDrC,GJIJvD,GEuCE,AQ1C8C,EAAE,ELgBhC,GAAG,IAAIoE,CLbV,GAAG,OKaG,EAAtB;AJJa3D,AGbN4C,AF+CL,AQ9CG,ACSR,AXNwBpD,KUTH,CNKXoD,AOUNuD,CDRI,GNFM,EAAE,AJIQ3G,CAAC,CWMb,CXNe,EWMZ,AXNO,IWMHoF,IPVX,cHasBtE,AUHf,CAAayF,UAAb,EAAyBlF,GVGxB,AUHD,CVGgClC,AUH/C,GVGgB,EAAmC,IAAnC,EAAwC,KAAKmB,GAA7C;AGbe+C,AFgD5B,AQ9COD,ACUV,AXR+BnD,MIJAoD,AMErBD,ACUNwD,IDVU,EAAE,ACUN,AXRqB3G,CAAC,EIJQ,AJIN,CWQpBoB,CPZ4B,EAAlC,AOYE,EAASmD,EDVX,CCUE,EAAciC,MAAd,EAAsBC,KAAtB,EAA6BC,QAA7B,4BAA0C3D,6BAAeL,MAAzD,sBAAoE2B,2BAAcF,MAAlF,EAAV,CAjBkB,CAmBlB;AVAgB,AGd8Bd,AFiD7C,AQ/C4BD,AVEP,MIJwBC,AMEjBD,KVEzB,EIJiD,EAAE,AMEjB,EAAE,CAAhC;ANFA,AMEmCC,ACa3C,AXVI,KIXiB,CMQsBA,ACavCuD,CPdI,MMC0C,EAAE,ACavC,GAAG,CAAhB;AVAY,AGdFzD,AFiDV,AQhDQ,KAPa,CNMXA,CMEF,GNFM,EAAE,AFiDV,GDnCW,CCmCPxB,GDnCE,ECmCN,CAAU,CEjDR,2BFiDF,CAAN;ADlCgBpB,AEMb,ACrB0B6C,AFkD9B,AQhDWD,ACaV,AXVE,IGgBOJ,ECrBoBK,AMEnBD,ACaJ0D,IDbQ,EAAE,ACaJ,CXVL,EIL+B,AOevB,EPfyB,CDqBjB,CCrBf,EDqBkB,EHhBxB,CWUIA,CRMwBpE,COnBtB,ICaO,CAAChB,IAAD,ERMW,AQND,EVAKb,AEM3B,iBFNa,CAAgC1B,GAAhC,EAAqC,UAArC,EAAgD,MAAhD,EAAwD,KAAKG,QAA7D;AGf4BgE,AMEZD,ACc5B,AXVAhE,MINwCiE,AMEZD,ECcxB3D,EXVJL,GIN+C,AOgBtC,EPhBwC,AMEZ,CCczB,CDd2B,ACc1BqC,AXVN,CUJH,GCca,AXVN,GWUSmF,GXVpB,GAAoBjH,GWUR,IAAqB,EXVJ,EWU7B,CXVgC;ACUpBY,AGhBR,AMEsC8C,ACe1CuD,AXXkC7G,IWWlC6G,CPxBiB,CMSyBvD,CNDtC,KJK8BtD,CUJe,ACexC,AXX0B,EUJgB,AVId,CWWzB0B,AXXoB,IWWhC,mBVD0BZ,gBAAd,CAA+B3B,GAA/B,EAAmC,IAAnC,EAAwC,KAAKmB,GAA7C;AGfN8C,AMCF,ACgBJwD,AXZwC3G,IWYxC2G,CDxBiB,CNOXxD,AMPN,INOU,AOiBJ,CAACuC,CPjBK,AJK4B1F,CAAC,EAAE,GWY3C,CAAe,OPjBX,GOiBY8G,KAAD,STkCE;ADnCL,AGhBgB1D,AFoDhC,AQjDI,ACce,AXZiB,MILJA,GMGvBE,CRiDL1B,CF/CA,EWY0BkF,CXZ0B1H,CILf,EAAE,AMGvC,CCc+B,CPjB3B,AOiB4B2H,CDdhB,CAAhB,AVE2D,IWYjC,AXZqC,CWYxBtH,ETmCrB,GAAG,ASnCK,CAAX,AXZqC,CE+CxD,EF/C6EE,SAAS,GAAG;AIL1C0D,AMI3C,ACae,AXZwEtD,KWYvF,CPjB2CsD,GMItC5B,GVCkF1B,CILrC,AMIlD,AVCwF,EILpC,AJKsC,CUD9E,CAAZ,AVCqF;ACY7E,AGjBJ,AFqDR,AQhDI,ACaAb,AXb8Fc,IWa9Fd,CP1BiB,CAAjB,CO0BG,CAAC8H,CDbCzD,ERgDJ,CFhD6FvD,CAAC,EEgD1FV,AFhD4F,CEgD3F,CSnCN,CAAc,CTmCL,ASnCT,CTmCJ,CSnCqB,CTmCLA,ASnCZ,CTmCa,CQhDb,ACaoB,ETmCJ,CQhDO,ACavB,EAAyB,ETmCJ8B,CSnCrB,CDbA,CRgDgB,CAASI,MAA7B,EAAqClC,CAAC,EAAtC,EAA0C;ADnC1B,AGfZ,AFmDF,AQhDE,ACaAqH,AXdqF,IWcrFA,KPhBKrD,AMGAE,CCaC,CAACyD,AXd6C,EEiDjD,CQhDH,AVDyGtH,CWczG,CAAY,CPhBZ,AFmDOJ,AQhDM,CRgDL,EEnDQ,CAAhB,AFmDW,CAAb,CFjDoH,CEiDpGA,CAAC,CSnCF2H,AXdwG,CWczG,CTmCM,CSnCFC,CAAJ,EAAU,CTmCC/F,GAAL,CAAS9B,CAAT,EAAYkC,MAAhC,EAAwCjC,CAAC,EAAzC,EAA6C;ADlDvC,AGAJ,AFmDA,AQjDeQ,ACaS,AXd+FA,MUCxGA,CAAC,ENFX0B,AMEa,CAAL,EVD0G1B,CIDvH,AOe+BmH,AXdyF,CEkDpH,ASpC4B,CAAC7H,AXdyF,CID9G,CAAZ,AJCqH,EEkD5G+B,GAAL,CAAS9B,ASpCkB,CToC3B,ASpCsCU,CAAX,CToCfT,CAAZ,CSpC0C4H,CAAC,CAAC9H,EToC1B,GAAtB,EAA2B,CSpCmB,CAAWW,CAAjC;APdxB,AFmDE4B,AQlDmB5B,ACauC,AXdkEA,KWc9H,CDbqBA,CAAC,ACawC0F,EPdzDnC,AMCmB,GRkDtB3B,AFnD4H5B,CAAC,CWc/H,CAAsE,AXd2D,SIAjI,COcuE8G,EPdhD,GFmDH,ASrCkD,CTqCjDjF,EEnDrB,EFmDE,CAAwB;ADrCrB,AGbL,AFkD4B9B,AQlDf,ACayD,AXd+C,KUCrH,INAKyD,EJDL,EWciFsD,CPbjF,AFkD4B/G,CAAC,EElDhB,AFkDkB,CSrCuD,CAACqH,GTqCnD/H,CSrC6C,CAAWI,KAAX,CTqClD,CAAcM,ASrCsDb,CTqCpE,ESrCkD,CTqChC,ASrCqB,KTqChBM,QAAL,GAAgBD,CAAlC,GAAsC,KAAKC,QAAL,GAAgB,CAA3D;ADnCzB,AGfcO,AFkDyEC,AQhDxF,ACWsE,AXbtEJ,KWaA,CPbeG,CHJf,AGIgB,EAAE,AMEbqB,CNFQ,AJAbxB,EUEA,CTaO,CCmCiFI,CAAC,AQhD9EoB,ERgDgF,CQhD3F,EVFU,EEkDsF/B,CFlDnF,OEkD8E,CAAcW,CAAd,GAAkB,KAAKR,QAAL,GAAgBF,CAAlC,GAAsC,KAAKE,QAAL,GAAgB;ADlC7Ie,AGhBiBP,AFkDK,AQ/C7B,ACWG+F,AXdehG,IWcfgG,EPdqB/F,CAAC,EAAE,COclB,CAACqH,CXdQtH,CEkDb,AFlDc,EAAE,EAAL,eWcb,CAA6B8G,EVEXjG,IUFlB,aVEI,CAAgC1B,GAAhC,EAAqC,OAArC,EAA6C,aAA7C,EAA4D,KAAKG,QAAjE;AACH,AGjBY,AFmDZ,ASpCJ,AXfyBW,GWQ1B,CArBkB,CPad,AOiBJ,OXjB0BA,CAAC,EAAE;ACkB5B,AGhBG,AFkDD,AFpDc,SIERyD,EJFL,eIEA,GAAyB,EAAzB;AAEA,AFiDH,AFpDG5D,SIGKuB,CJHLvB,EIGA,GAAWuB,GAAX,MJHc,GAAG;AIIpB,AOaD2E,AXjBuBhG,EWiBvBgG,MAAM,CAACsB,GXjBgBtH,CAAC,EAAGV,QAAQ,CAACU,CUI/BN,AVJsB,GAAa,EWiBxC,AXjBqB,CWiBQoH,CDbjB3H,KAAK,ACajB,EA/BkB,CAiClB;ATkCA,AQ/CI,AVNyCc,UUMnC0D,EVNmC1D,CEqDtC4B,AFrDuC,EAAGvC,IUM9B,GAAG,CVNmC,CAACW,CAAT,GAAa,GEqD9D;AACD,AQhDyBD,ACcxBmG,AXpBqB,EWoBrBA,MDdwBnG,CAAC,CCcjB,CDdmB,ACclBuH,AXpBL,EUMkB,ECctB,CAAcC,gBAAd,CAA+B,SAA/B,EAA0C,UAACzB,CAAD,EAAO;ADdlB9F,ACe3B2G,AXpBA7G,IWoBA6G,IDf2B3G,CAAC,CCetB,AXpBNF,CUK8B,ACevB4F,OAAP,CAAe,MXpBA,GAAG,CWoBFoB,KAAD;ADfG,ACeH,AXpBK/G,OUKpB,KVLoBA,CWoBM+G,AXpBL,EAAE,EAAL,CWoBa,CAACU,MPf/B/H,OAAOP,COekB,CAAqB4G,CAAC,CAACnF,CPfpC,EOea,CAAX;APbf,AMDA,ACce,AXpBYX,KWoB3B,KPbM0D,AMDAC,EVNqB3D,CAAC,EAAE,EUMjB,ENCE,CMDC,ENCE,GMDGwD,KAAL,CAAWzD,CRiDrBV,AQjDU,IAAgB,CAAhB,IAAqB,CRiDrB,IQjD0BmE,KAAL,CAAWxD,CAAX,IAAgB,CAArC,mBAAkD,KAAKuD,eAAvD,qBAAqF,KAAKA,eAA1F,CAAhB;ANCoBxD,AFiDxB,AQjDI,ACcH,AXrBqB,GWmBtB,KPZwBA,CAAC,CFiDrBT,AQjDMsE,CNAiB,AFiDtB,AFxDD,EUOS,CNAS,AFiDd3D,EQjDQ,ERiDJ,CAACC,EQjDQgD,GRiDb,CAAW,CAAC7D,IQjDJ,CAAewE,GRiDH,CAAC9D,AQjDb,CRiDI,AQjDgB,GRiDH,KAAKV,EQjDDyE,CAAD,KRiDH,CAAc/D,CAA5B,IAAiC,KAAKP,QAAjD,CAAR;AEjDgCQ,AFkDhC,AQlDoC,ACepCkG,AXrBI,EWqBJA,MPfgClG,CAAC,CFkD7BT,ASnCI,CPf2B,AFkD9B,ASnCI+H,GTmCDrH,CQlDmC6D,ACe3C,CDf4C,ACe9ByD,CDf+BpE,CRkDjC,CAACjD,EQlD8B,GRkDnC,CAAW,AQlDkCyD,CRkDjCtE,MQlDgB,ACepC,CAA+B,CTmCH,CAACW,CAAT,GAAa,CSnCjC,EAAwC,ETmCFX,QAAL,ASnCQyG,CTmCM9F,ASnCP,CTmCrB,CSnC4B,GTmCK,KAAKR,QAAjD,CAAR;AElDsB,AFmDtB,AQnDoC,ACgBhCmH,IAAAA,GPhBA,AMAY,CAAZ,ECgBM,CAACjB,ETmCJ,CAACnG,CAAD,EAAID,CAAJ,ASnCH,CTmCJ,ASnCmB,UAACwH,KAAD,EAAW;APf1B,AFmDL,AQnDK,ACgBI,AXtBN,UIMQnD,AMAF,ACgBImD,CDhBHlD,EVNF,CUMH,CCgBa,CDhBH,ACgBI6D,CPhBD,GAAG,EMAA,EVNlB,CIMuBjE,CMAD7B,INAJ,CAAW5B,AMAX,CNAA,AMAU,CCgBtB,EAA6B,CPhBD,CAAhB,IAAqB,IMArB,CNA0ByD,AMAhC,CALG,CAOb,GNFqC,CAAWxD,CAAX,IAAgB,CAArC,mBAAkD,KAAKuD,eAAvD,qBAAqF,KAAKA,eAA1F,CAAhB;AACA,AOgBQuD,AXtBR1H,QWsBQ0H,EPhBFlD,AJNNxE,GIMS,AOgBI,CAACqI,EPhBF,CJNL,IIMUvE,AJNN,MAAX,GIMY,AJNQvD,CIMOkE,AOgBnB,CAAwBiC,CAAC,CAACnF,CPhBtB,CAAoB,COgBxB,EXtBqB,GAAG,IIMCmD,CAAD;AAAA,AMEhC5E,ACeK,AXvB6B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AJ5B6DW,CEkE9DX,AQpCqBA,AV9BgC,GAAaC,CAAC,GAAGE,CU8BtD,CAAcQ,CRoCpBiC,AQpCM,GAAkB,KAAKuB,GRoClB,EQpCa,CAAWxD,CAAX,GAAeU,YAAhD;ANDA,AFsCJ,AQnCI,AVhCiB,UI6BbsD,AFsCJlC,AQnCIG,CVhCJ,EI6BO,GAAG,EAAV,CFsCS,AQnCI,GRmCD,AQnCI,KRmCCC,AQnCIqD,WRmCT,CAAiBlG,CQnCb,EAAhB,KRmCY,CAAhB;AErCI,AFsCJ,AQnCI,AVhCAS,UI6BImE,AFsCJ9B,AQnCI6B,AVhCJlE,GUgCO,GRmCD,AQnCI,GRmCD,CAACgC,KFnEK,GAAG,CEmEC,CAAC,CEtCK,AFsCN,CAAT,EEtCkB,CFsCHG,CEtCzB,CAPiB,CASjB,MFoCkC,CAAC,CAAD,CAAzB,EAA8BH,SAAS,CAAC,CAAD,CAAT,GAAeG,SAAS,CAAC,CAAD,CAAtD,CAAb;AElCI,AFmCJ,AQnCQlC,AVjCgBA,QUiChBA,CAAC,CRmCLgC,CQnCO,CVjCahC,CAAC,CEoEjB,CFpEmB,CUiCXV,CRmCL,AFpEW,KEoEN+C,EQnCL,CAAcrC,CAAd,GAAkBkC,MRmClB,CAAmBE,EQnCQ,CAAC,CAAD,CAAT,CRmClB,CAAX,CQnC4C,KAAKiD,YADnC;ANEV,AFmCJ,AQnCQpF,AVlCuBA,QUkCvBA,CAAC,EAAE,CVlCoBA,CEqExB+B,AFrEyB,EAAE,CUkClB1C,CRmChB,OQnCW,CAAcW,CAAd,GAAkBiC,SAAS,CAAC,CAAD,CAAT,GAAe,KAAKmD;ANC7C,AFmCL,AQtCe,AVhCQ,OUgClB,IVhCA;AIoCA,AMCA,AVpCA,UUoCIrD,IAAI,GAAG,KAAKX,GAAL,CAASW,IAAT,CAAciC,GAAd,EAAmB/B,SAAnB,CAAX;ANAA;AACA,AMAA,AVpCF,UUoCMF,GVpCD,CUoCK,IAAI,GAAR,CVpCN,GUoCqBA,IAAI,CRkCnB7C,GQlCuB,ERkClBI,CQlCT,ERkCYC,AQlCoB,GRkCjB;AEjCf,AFkCJgB,AQlCQ,AVpCJ,aUoCSlB,EVpCJL,MUoCD,CAAce,CAAd,GAAkBsF,MVpCtB,CEsEUzE,AQlCN,GVpCsBnB,KAA1B,SEsEJ,CAAgCP,GAAhC,EAAqC,WAArC,EAAkD,MAAlD,EAA0D,KAAKG,QAA/D,EAAyEC,CAAzE,EAA4EC,CAA5E,EAA+E,KAAKC,QAApF;AEjCI,AFkCL,AQlCS,AVpCJ,aUoCSH,EVpCJJ,MUoCD,CAAce,CAAd,GAAkBsF,OAAlB,AVpCJ,GAA0BrF,IAAI,CAACC,KAAL,CAAW,KAAKlB,iBAAL,GAAyB,EAApC,CAA1B;AIqCA,AMAC;ANCD,AMAH,AVrCG,cAAI,KAAKC,kBAAL,GAA0B,CAA9B,EAAiC;AIsCjC,AJtCmC,iBAAKD,cEuEnCE,GFvE8B,EEuEzBI,CFvEkD,CAAzB,CEuEtBC,GAAG;AEhChB,AFiCJgB,AFxEoE,iCEwEtDK,iBAAd,CAAgC1B,GAAhC,EAAqC,WAArC,EAAkD,OAAlD,EAA2D,KAAKG,QAAhE,EAA0EC,CAA1E,EAA6EC,CAA7E,EAAgF,KAAKC,QAArF;AEhCI,AFiCL,oCQlCiB;ANEZ,AMDA,AVvCAG,UAAAA,SAAS,GAAG;AI0Cf,AMFG,AVxCcI,UUwCVkC,EVxCUlC,CAAC,EAAGL,IUwCL,EVxCW,CUwCR,AVxCS,CUwCR,CAAD,EAAI,CAAJ,AVxCcT,CUwC9B,iBVxCwB,CAAN,CAAgCc,CAAtC;AAA0CC,YAAAA,CAAC,EAAGN,MAAM,CAAC,KAAKT,IE0EjEQ,OAAOP,KAAKI,EF1E+C,CE0E5CC,AF1EsC,CAAgCS,EE0EnE;AAE3B,AQnCI,AVzCY,UUyCR,CRmCHqC,AF5ED,IUyCSmB,KRmCb,AQnCQ,CRmCOtE,AQnCIa,CAAX,ERmCR,EAAoBT,AQnCI,CRmCxB,AQnCQ,ERmCeC,CAAvB,CQnC6B,KAAKiE,KAAL,CAAWzD,CAAX,GAAe,CAAxC,EAA2C;ARqC/C,AQpCQkC,AVzCJrC,QUyCIqC,ERoCJvC,AF7EAE,ME6EM,CQpCO,ERoCJ,CACX,AQrCkB,AVzCN,CUyCO,CAAC,CAAF,AVzCH,EUyCQ,CAAL,CAAZ,SNEQ,CAEf;AFiCGG,AQpCC,AV1CcA,QE8EfA,CAAC,EAAE,CF9EYA,CAAC,CE8ElB,CF9EoB,EAAL;AE8ELC,AF9EcA,QE8EdA,CAAC,EAAE,CF9EWA,CAAC,EAAE;AE8E3B,AQnCE,AV3Ca,OE6EJ,EAEX,CQpCM,CV3CJ,IU2CSwD,KAAL,CAAWxD,CAAX,IAAgB,CAAhB,IAAqB,INIdW,CMJmB6C,INId,CAEnB,AMN4B,CAAWxD,CAAX,GAAe,CAAxC,EAA2C;ARoC3CD,AQnCIkC,AV3CJpC,QE8EAE,AQnCIkC,CRmCH,CF9EDpC,CE8EG,GAAL,GQnCe,GAAG,CAAC,CAAD,EAAI,AV3CN,CU2CE,CAAZ,CV3Ca;AE8ETG,AQlCP,AV5CkBD,QE8EXC,CAAC,EAAE,CF9EQD,CAAC,EAAEV,QAAQ,CAACU,CAAT,GAAaR,CAAC,GAAGC,QAAtB;AE8EnB,AF9EmDQ,OE4ExC,EAGX,GF/EmDA,CAAC,EAAEX,QAAQ,CAACW,CAAT,GAAaV,CAAC,GAAGE,QIkDrD,CAEnB;AF2BGO,AQlCA,AV7CiB,QE+EjBA,CAAC,CQlCG,CRkCD,AF/EH,GE+EF,CQlCWyD,KAAL,CAAWxD,CAAX,IAAgB,CAAhB,IAAqB,KAAKwD,KAAL,CAAWxD,CAAX,GAAe,CAAxC,EAA2C;ARkCnCA,AQjCJiC,AV7CJnC,QE8EQE,AQjCJiC,CRiCK,CF9ETnC,CE8EW,MQjCE,GAAG,CAAC,CAAD,EAAI,CAAC,AV7CN,CU6CC,CAAZ,CV7Cc;AE8EpB,AQhCG,AV9CmBC,OE2EX,EAIX,GF/EsBA,CAAC,EAAE,EAAL;AE+ElBA,AF/E2BC,QE+E3BD,CAAC,EAAE,CF/EwBC,CAAC,CE+E9B,CF/EgC;AE+EtBA,AQhCR,AV/CkB,QE+EVA,CAAC,EAAE,AF/EX,EU+COiC,SAAP;ARgCF,AQ/BD,AV/CG,OE0ES,EAKX;AAAElC,QAAAA,CAAC,EAAE,GAAL;AAAUC,AF9EV,QE8EUA,CAAC,EAAE;AAAb,AF5EE,OEuES,EAMX,0BQ/BaW,KAAK;AR+BhBZ,AQ9BA,AV7EJ,QE2GIA,CAAC,EAAE,GAAL,AQ9BUY,GAAR;AR8BQX,AQ7BJ,QR6BIA,CAAC,EAAE,EQ7BF,WAAL;AR6BN,AQ5BU,AV/CZd,MAAAA,CEqEa,EAOX,AF5EC,CAACiB,KU+CaoD,IV/CjB,CAAc,KAAK3E,KU+CP,GAAuB,GV/CnC,EA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","file":"app.a6a4d504.js","sourceRoot":"..","sourcesContent":["class DrawManager {\n  constructor() {\n    this.spritesheet = new Image();\n    this.spritesheet.src = require(\"../../public/images/dungeonStuffs4.png\");\n\n    this.render_torch_time = 0;\n    this.render_torch_count = 0;\n  }\n\n  get_draw_elements(ctx, element, picture, position, i = 0, j = 0, tileSize = 0, delta = 0, frames = {}) {\n\n    let sourcePos, sourceSize, destinationPos, destinationSize;\n    // void ctx.drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);  \n\n    switch (element) {\n      case \"chest\":\n        picture == \"closedChest\" ? sourcePos = { x: 240, y: 174 } : sourcePos = { x: 240, y: 208 };\n        sourceSize = { x: 30, y: 18 };\n        destinationPos = { x: (position.x - 12), y: (position.y - 18) };\n        destinationSize = { x: 45, y: 30 };\n        break;\n      case \"princess\":\n        picture == \"rock\" ? sourcePos = { x: 0, y: 208 } : (picture == \"water\" ? sourcePos = { x: 16, y: 208 } : sourcePos = { x: 32, y: 208 });\n        sourceSize = { x: 19, y: 18 };\n        destinationPos = { x: (position.x - 15), y: (position.y - 45) };\n        destinationSize = { x: 40, y: 30 };\n        break;\n      case \"container\":\n        picture == \"wall\" ? sourcePos = { x: 0, y: 16 } : sourcePos = { x: 64, y: 96 };\n        sourceSize = { x: 20, y: 18 };\n        destinationPos = { x: position.x + j * tileSize, y: position.y + i * tileSize }\n        destinationSize = { x: 30, y: 30 }\n        break;\n      case \"content\":\n        this.render_torch_time += delta;\n        this.render_torch_count = Math.floor(this.render_torch_time / 10);    \n        if (this.render_torch_count > 6) { this.render_torch_time = 0; }\n        sourcePos = { x: (frames[this.render_torch_count].x), y: (frames[this.render_torch_count].y) };\n        sourceSize = { x: 45, y: 80 };\n        destinationPos = { x: position.x + j * tileSize, y: position.y + i * tileSize }\n        destinationSize = { x: 80, y: 90 }\n        break;\n      default:\n\n        break\n    }\n    ctx.drawImage(this.spritesheet, sourcePos.x, sourcePos.y, sourceSize.x, sourceSize.y, destinationPos.x, destinationPos.y, destinationSize.x, destinationSize.y);\n  }\n  get_draw_headers(ctx, value, num) {\n\n    let myPosition = 500;\n    // REVISAR: ctx.translate(0,191);\n\n    if (value == \"AA\") {\n      if (num) {\n        ctx.drawImage(this.spritesheet, 0, 0, 9, 19, myPosition, 13, 20, 40);\n      } else {\n        ctx.drawImage(this.spritesheet, 7, 191, 7, 19, myPosition + 17, 13, 20, 40);\n      }\n\n    } else if (value == \"BB\") {\n      if (num) {\n        ctx.drawImage(this.spritesheet, 15, 191, 9, 19, myPosition + 40, 13, 20, 40);\n      } else {\n        ctx.drawImage(this.spritesheet, 21, 191, 10, 19, myPosition + 60, 13, 20, 40);\n      }\n\n    } else {\n      if (num) {\n        ctx.drawImage(this.spritesheet, 31, 191, 10, 19, myPosition + 80, 13, 20, 40);\n      } else {\n        ctx.drawImage(this.spritesheet, 39, 191, 10, 19, myPosition + 100, 13, 20, 40);\n      }\n    }\n  }\n}\nexport const myDrawManager = new DrawManager();\n","import { myDrawManager } from '../effects/DrawManager';\nexport class Chest {\n    constructor(position, value, num, isChestOpen) {\n        this.position = { x: position.x, y: position.y };\n        this.value = value;\n        this.num = num;\n        this.isChestOpen = isChestOpen;\n    }\n\n    update(deltaSeconds) {\n\n    }\n\n    keyboard_event(key) {\n\n    }\n\n    draw(delta, ctx) {\n\n        if (this.isChestOpen) {\n            myDrawManager.get_draw_elements(ctx, \"chest\",\"openChest\", this.position);\n            switch (this.value) {\n                case \"AA\":\n                    myDrawManager.get_draw_elements(ctx, \"princess\",\"rock\", this.position);\n                    myDrawManager.get_draw_headers(ctx,\"AA\",this.num);\n                    break;\n                case \"BB\":\n                    myDrawManager.get_draw_elements(ctx, \"princess\",\"water\", this.position);\n                    myDrawManager.get_draw_headers(ctx,\"BB\",this.num);\n                    break;\n                case \"CC\":\n                    myDrawManager.get_draw_elements(ctx, \"princess\",\"fire\", this.position);\n                    myDrawManager.get_draw_headers(ctx,\"CC\",this.num);\n                    break;\n                default:\n                    break;\n            };\n\n        } else {\n            myDrawManager.get_draw_elements(ctx, \"chest\",\"closedChest\", this.position);\n        }\n    }\n}","import { myDrawManager } from '../effects/DrawManager';\nlet dungeonMap = `\nWWWWWWWWWWWWWWWWWWWWWWWWWWWW\nW..S.........WW............W\nW.WWWW.iWWWi.WW.iWWWi.WWWW.W\nW.WWWW.WWWWW.WW.WWWWW.WWWW.W\nW.WWWW.WWWWW.ii.WWWWW.WWWW.W\nW..........................W\nW.WWWW.WW.WWWWWWWW.WW.WWWW.W\nW.WWWW.WW.WWWWWWWW.WW.WWWW.W\nW......WW....WW....WW......W\nW.iWWi.WWWWi.WW.iWWWW.iWWi.W\nW.WWWW.WWWWW.WW.WWWWW.WWWW.W\nW.WWWW.WW..........WW.WWWW.W\nW.WWWW.WW.iWWWWWWi.WW.WWWW.W\nW.iWWi.WW.W......W.WW.iWWi.W\nW.........W......W.........W\nW.WWWW.WW.W......W.WW.WWWW.W\nW.WWWW.WW.WWi..iWW.WW.WWWW.W\nW.WWWW.WW..........WW.WWWW.W\nW.WWWW.WW.WWWWWWWW.WW.WWWW.W\nW.WWWW.WW.WWWWWWWW.WW.WWWW.W\nW............WW............W\nW.iWWi.WWWWW.WW.WWWWW.iWWi.W\nW.WWWW.WWWWW.WW.WWWWW.WWWW.W\nW...WW................WW...W\nWWW.WW.WW.iWWWWWWi.WW.WW.WWW\nWWW.WW.WW.WWWWWWWW.WW.WW.WWW\nW......WW....WW....WW......W\nW.iWWWWWWWWW.WW.WWWWWWWWWi.W\nW.WWWWWWWWWW.WW.WWWWWWWWWW.W\nW..........................W\nWWWWWWWWWWWWWWWWWWWWWWWWWWWW\n`;\n\nexport class Map {\n  constructor(tileSize = 23) {\n    this.spritesheet = new Image();\n    this.spritesheet.src = require(\"../../public/images/dungeonStuffs4.png\");\n\n    this.spritesheet2 = new Image();\n    this.spritesheet2.src = require(\"../../public/images/dungeonWalls2.png\");\n\n    this.position = { x: 0, y: 0 };\n\n    this.tileSize = tileSize;\n    let rows = dungeonMap.trim().split(\"\\n\");\n    this.map = rows.map((row) => row.split(\"\"));\n    console.log(\"Map size\", rows[0].length, this.map.length);\n\n    this.time = 0;\n    this.count = 0;\n  }\n\n  get_dungeon_start() {\n    for (let i = 0; i < this.map.length; i++) {\n      for (let j = 0; j < this.map[i].length; j++) {\n        if (this.map[i][j] == \"S\") {\n          return {\n            x: this.position.x + this.tileSize * j + this.tileSize / 2,\n            y: this.position.y + this.tileSize * i + this.tileSize / 2,\n          };\n        }\n      }\n    }\n    throw new Error(\"Set the S for pacman start\");\n  }\n\n  get_random_locations() {\n    let availablePositions = [];\n    for (let i = 0; i < this.map.length; i++) {\n      for (let j = 0; j < this.map[i].length; j++) {\n        if (this.map[i][j] == \".\") {\n          availablePositions.push({ x: this.position.x + this.tileSize * j + this.tileSize / 2, y: this.position.y + this.tileSize * i + this.tileSize / 2 })\n        }\n      }\n    }\n    return availablePositions;\n  }\n\n  pos_to_tile(position) {\n    let i = Math.floor((position.x - this.position.x) / this.tileSize);\n    let j = Math.floor((position.y - this.position.y) / this.tileSize);\n    return [j, i];\n  }\n\n  tile_at_index(tileIndex) {\n    try {\n      let tile = this.map[tileIndex[0]][tileIndex[1]];\n      return tile;\n    } catch (error) {\n      console.log(\"out of bounds\");\n      return false;\n    }\n  }\n\n  tile(position, direction) {\n    let tileIndex = this.pos_to_tile(position);\n    let facing = [tileIndex[0] + direction[1], tileIndex[1] + direction[0]];\n    let tile = this.tile_at_index(facing);\n    return tile;\n  }\n\n  draw_wall(ctx, i, j) {\n    myDrawManager.get_draw_elements(ctx, \"container\", \"wall\", this.position, i, j, this.tileSize)\n  }\n\n  draw_floor(ctx, i, j) {\n    myDrawManager.get_draw_elements(ctx, \"container\", \"floor\", this.position, i, j, this.tileSize)\n  }\n\n  draw_torch(delta, ctx, i, j) {\n\n    this.draw_wall(ctx, i, j);\n\n    let frames = [\n      { x: 129, y: 150 },\n      { x: 145, y: 150 },\n      { x: 161, y: 150 },\n      { x: 177, y: 150 },\n      { x: 193, y: 150 },\n      { x: 209, y: 150 },\n      { x: 225, y: 150 },\n      { x: 241, y: 150 },\n    ]; \n    \n    myDrawManager.get_draw_elements(ctx, \"content\", \"torch\", this.position, i, j, this.tileSize, delta, frames);\n\n  }\n\n  keyboard_event() { }\n  update() { }\n\n  draw(delta, ctx) {\n\n    for (let i = 0; i < this.map.length; i++) {\n      for (let j = 0; j < this.map[i].length; j++) {\n        let cell = this.map[i][j];\n        if (cell == \"W\") this.draw_wall(ctx, i, j);\n        if (cell == \"i\") this.draw_torch(delta, ctx, i, j);\n        if (cell == \".\" || cell == \"S\") this.draw_floor(ctx, i, j);\n        // if (cell == \"O\") this.draw_door(ctx, i, j);\n      }\n    }\n  }\n}","import { Chest } from \"./Chest.js\";\nimport { Map } from \"./Map.js\";\nclass ChestManager {\n    constructor() {\n        this.chests = [\n            //position,ID,num,head,color\n            new Chest(this.chest_start_options(), \"AA\", 0, false),\n            new Chest(this.chest_start_options(), \"AA\", 1, false),\n            new Chest(this.chest_start_options(), \"BB\", 0, false),\n            new Chest(this.chest_start_options(), \"BB\", 1, false),\n            new Chest(this.chest_start_options(), \"CC\", 0, false),\n            new Chest(this.chest_start_options(), \"CC\", 1, false)\n        ];\n        this.latestOpenedChest = \"\";\n        return this\n    }\n    update(deltaSeconds) {\n\n    }\n    keyboard_event(key) {\n\n    }\n    draw(delta, ctx) {\n\n    }\n    set_map(map){\n        this.map = map;\n    }\n    chest_start_options() {\n        const map = new Map();\n        let availablePositions = [];\n        availablePositions = map.get_random_locations();\n        let random = 0;\n        random = Math.floor(Math.random() * availablePositions.length);\n        return availablePositions[random]\n    }\n}\nexport const myChestManager = new ChestManager();","export class Hero {\n    framePos = 0;\n    time = 0;\n    constructor(position, map) {\n        this.position = { x: position.x, y: position.y };\n        this.heroSize = 10;\n\n        this.spritesheet = new Image();\n        this.spritesheet.src = require(\"../../public/images/link.png\");\n        this.sequences = [\n            { name: \"still-down\", numFrames: 1, ySeqPos: 0 },\n            { name: \"still-left\", numFrames: 1, ySeqPos: 1 },\n            { name: \"still-up\", numFrames: 1, ySeqPos: 2 },\n            { name: \"still-right\", numFrames: 1, ySeqPos: 3 },\n            { name: \"moving-down\", numFrames: 10, ySeqPos: 4 },\n            { name: \"moving-left\", numFrames: 10, ySeqPos: 5 },\n            { name: \"moving-up\", numFrames: 10, ySeqPos: 6 },\n            { name: \"moving-right\", numFrames: 10, ySeqPos: 7 },\n        ];\n\n        this.framePos = 0;\n        this.time = 0;\n        this.currentSequence = \"down\";\n        this.speed = { x: 0, y: 0 };\n\n        this.current_direction = [];\n        \n        this.map = map;\n    }\n\n    draw(delta, ctx) {\n\n        const frameSize = { x: 120, y: 130 };\n        const seqName = this.speed.x == 0 && this.speed.y == 0 ? `still-${this.currentSequence}` : `moving-${this.currentSequence}`;\n        const seq = this.sequences.find((s) => s.name == seqName);\n        if (!seq) throw new Error(\"invalid seq\");\n\n        ctx.drawImage(\n            this.spritesheet,\n            frameSize.x * this.framePos,\n            frameSize.y * seq.ySeqPos,\n            frameSize.x,\n            frameSize.y,\n            this.position.x - 12,\n            this.position.y - 23,\n            frameSize.x - 95,\n            frameSize.y - 95\n        );\n\n        this.time += delta;\n        seq.numFrames == 1 ? this.framePos = Math.floor(this.time * 3) % seq.numFrames : this.framePos = Math.floor(this.time * 10) % seq.numFrames;\n    }\n\n    update(deltaSeconds) {\n\n        // this.speed.x = this.speed.x+10;\n\n        const hypoDirections = [[1, 0], [-1, 0], [0, 1], [0, -1]];\n        let direction = [];\n        let tip = {};\n        let abailables_directions = [];\n\n        // if (!this.current_direction.length > 0) {   \n\n        //     for (let i = 0; i < hypoDirections.length; i++) {\n        //         direction = [];\n        //         direction.push(hypoDirections[i])\n        //         tip = {\n        //             x: this.position.x - direction[0] * this.heroSize,\n        //             y: this.position.y - direction[1] * this.heroSize,\n        //         };\n        //         let tile = this.map.tile(tip, direction);\n        //         // console.log(tile);\n        //         if (tile != \"W\" && tile != \"i\" && tile != false) {\n        //             abailables_directions.push(direction);\n        //         }\n        //     }\n        // }\n\n    }\n\n    get_direction() {\n\n    }\n\n    keyboard_event(key) {\n\n    }\n\n    keyboard_event_up() {\n\n    }\n}","import { Hero } from \"./Hero.js\";\nimport { Map } from \"./Map.js\";\nclass HeroManager {\n\n    constructor() {\n        this.heroes = [\n            //position,ID,num,head,color\n            new Hero(this.hero_start_options(), new Map()),\n            new Hero(this.hero_start_options(), new Map()),\n            new Hero(this.hero_start_options(), new Map()),\n            new Hero(this.hero_start_options(), new Map()),\n        ];\n        return this\n    }\n    update(deltaSeconds) {\n\n    }\n    keyboard_event(key) {\n\n    }\n    draw(delta, ctx) {\n\n    }\n    hero_start_options() {\n        const map = new Map;\n        let availablePositions = [];\n        availablePositions = map.get_random_locations();\n        let random = 0;\n        random = Math.floor(Math.random() * availablePositions.length);\n        return availablePositions[random]\n    }\n}\nexport const myHeroManager = new HeroManager();","export class FPSViewer {\n    constructor(position) {\n        this.position = position;\n    }\n\n    keyboard_event() {\n\n    }\n    update() {\n\n    }\n    draw(delta, ctx) {\n        const fps = (1 / delta).toFixed(2);\n        ctx.font = \"15px Arial\";\n        ctx.fillStyle = \"white\";\n        ctx.fillText(`FPS: ${fps}`, this.position.x, this.position.y);\n    }\n}\n","export class Chronometer {\n    constructor(position) {\n        this.position = position;\n        this.seg = 0;\n        this.min = 0;\n    }\n\n    keyboard_event() { }\n    update() { }\n    draw(delta, ctx) {\n        \n        this.seg += delta;\n        let seg = Math.floor(this.seg);\n        let currentTimer = `Time: ${this.min}:${seg} segundos`\n        if (seg == 60) { this.min++; this.seg = 0; }\n\n        ctx.font = \"15px Arial\";\n        ctx.fillStyle = \"white\";\n        ctx.fillText(`${currentTimer}`, this.position.x, this.position.y);\n\n    }\n}\n","export class AudioManager {\n  constructor() {\n\n  }\n}\n\nexport const myAudioManager = new AudioManager();","import { myAudioManager } from \"../effects/AudioManager.js\";\nexport class AudioStatus {\n  constructor(position) {\n    this.position = position;\n  }\n  keyboard_event() {\n\n  }\n  update() {\n\n  }\n  draw(delta, ctx) {\n    // ctx.font = \"15px Arial\";\n    // ctx.fillStyle = \"white\";\n    // ctx.fillText(\n    //   `Mute: ${myAudioManager.globalMute}`,\n    //   this.position.x,\n    //   this.position.y\n    // );\n  }\n}","import { myChestManager } from './ChestManager.js';\n// import { am } from \"../effects/AudioManager.js\";\nexport class Skeleton {\n\n    constructor(position, map) {\n        this.position = { x: position.x, y: position.y };\n        this.skeletonSize = 10;\n\n        this.spritesheet = new Image();\n        this.spritesheet.src = require(\"../../public/images/skeleton.png\");\n        this.sequences = [\n            { name: \"still-down\", numFrames: 2, ySeqPos: 2 },\n            { name: \"still-left\", numFrames: 2, ySeqPos: 1 },\n            { name: \"still-up\", numFrames: 2, ySeqPos: 0 },\n            { name: \"still-right\", numFrames: 2, ySeqPos: 3 },\n            { name: \"moving-down\", numFrames: 7, ySeqPos: 10 },\n            { name: \"moving-left\", numFrames: 7, ySeqPos: 9 },\n            { name: \"moving-up\", numFrames: 7, ySeqPos: 8 },\n            { name: \"moving-right\", numFrames: 7, ySeqPos: 11 },\n        ];\n        this.framePos = 0;\n        this.time = 0;\n        this.currentSequence = \"down\";\n        this.speed = { x: 0, y: 0 };\n\n        this.map = map;\n    }\n\n    draw(delta, ctx) {\n\n        const frameSize = { x: 64, y: 64 };\n        const seqName = this.speed.x == 0 && this.speed.y == 0 ? `still-${this.currentSequence}` : `moving-${this.currentSequence}`;\n        const seq = this.sequences.find((s) => s.name == seqName);\n        if (!seq) throw new Error(\"invalid seq\");\n\n        // void ctx.drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight); \n        ctx.drawImage(\n            this.spritesheet,\n            frameSize.x * this.framePos,\n            frameSize.y * seq.ySeqPos,\n            frameSize.x,\n            frameSize.y,\n            this.position.x - 20,\n            this.position.y - 25,\n            frameSize.x - 25,\n            frameSize.y - 25\n        );\n\n        // ctx.beginPath();\n        // ctx.arc(this.position.x, this.position.y, 3, 0, 2 * Math.PI);\n        // ctx.closePath();\n        // ctx.fill();\n\n        this.time += delta;\n        seq.numFrames == 2 ? this.framePos = Math.floor(this.time * 2) % seq.numFrames : this.framePos = Math.floor(this.time * 7) % seq.numFrames;\n    }\n\n    update(deltaSeconds) {\n\n        let newPosX = (this.position.x + this.speed.x * deltaSeconds);\n        let newPosY = (this.position.y + this.speed.y * deltaSeconds);\n\n        let direction = this.get_direction();\n        let tip = {\n            x: this.position.x - direction[0] * this.skeletonSize,\n            y: this.position.y - direction[1] * this.skeletonSize,\n        };\n\n        let tile = this.map.tile(tip, direction);\n        if (tile != \"W\" && tile != \"i\") {\n            this.position.x = newPosX;\n            this.position.y = newPosY;\n        }\n    }\n\n    get_direction() {\n        // Calculate direction based on speed\n        let direction = [1, 0];\n        if (this.speed.x != 0 && this.speed.x < 0) {\n            direction = [-1, 0];\n        }\n        if (this.speed.y != 0 && this.speed.y > 0) {\n            direction = [0, 1];\n        }\n        if (this.speed.y != 0 && this.speed.y < 0) {\n            direction = [0, -1];\n        }\n        return direction;\n    }\n\n    keyboard_event(key) {\n        switch (key) {\n            case \"ArrowLeft\":\n                this.currentSequence = \"left\";\n                this.speed.x = -100;\n                break;\n            case \"ArrowRight\":\n                this.currentSequence = \"right\";\n                this.speed.x = 100;\n                break;\n            case \"ArrowUp\":\n                this.currentSequence = \"up\";\n                this.speed.y = -100;\n                break;\n            case \"ArrowDown\":\n                this.currentSequence = \"down\";\n                this.speed.y = 100;\n                break;\n            case \"a\":\n                this.open();\n                break;\n        }\n    }\n\n    keyboard_event_up() {\n        this.speed.x = 0;\n        this.speed.y = 0;\n    }\n\n    open() {\n        let distance = 0;\n        myChestManager.chests.forEach((ori) => {\n            distance = 0;\n            distance = Math.sqrt(Math.pow(this.position.x - ori.position.x, 2) + Math.pow(this.position.y - ori.position.y, 2));\n            console.log(myChestManager.latestOpenedChest);\n            if (distance < 30 && !ori.isChestOpen) {\n\n                switch (myChestManager.latestOpenedChest) {\n                    case \"\":\n                        ori.isChestOpen = true;\n                        myChestManager.latestOpenedChest = ori.value;\n                        break\n                    case ori.value:\n                        ori.isChestOpen = true;\n                        myChestManager.latestOpenedChest = \"\";\n                        break\n                    default:\n                        myChestManager.chests.forEach(e => e.isChestOpen = false);\n                        myChestManager.latestOpenedChest = \"\";\n                        ori.isChestOpen = true;\n                        myChestManager.latestOpenedChest = ori.value;\n                        break\n                }\n            }\n        });\n    }\n}","import { myChestManager } from './actors/ChestManager.js';\nimport { myHeroManager } from './actors/HeroManager.js';\nimport { FPSViewer } from \"./actors/FPSViewer.js\";\nimport { Chronometer } from \"./actors/Chronometer.js\";\nimport { AudioStatus } from './actors/AudioStatus.js';\nimport { Skeleton } from \"./actors/Skeleton.js\";\nimport { Map } from \"./actors/Map.js\";\n// import { am } from \"../src/effects/AudioManager.js\";\n\n\nwindow.onload = () => {\n\n    console.log(\"ready\");\n\n    const canvas = document.getElementById(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n\n    // Actors\n    let map = new Map();\n    myChestManager.set_map(map);\n    let initialPos = map.get_dungeon_start();\n\n    let fps = new FPSViewer({ x: 5, y: 15 });\n    let chrono = new Chronometer({ x: 100, y: 15 });\n    let audio = new AudioStatus({ x: 250, y: 15 });\n    let skeleton = new Skeleton(initialPos, map);\n\n    let actors = [map, fps, chrono, audio, skeleton, ...myChestManager.chests, ...myHeroManager.heroes];\n\n    // GAME LOOP -> BUCLE DE RENDERIZADO Y ACTUALIZACIÓN\n    let lastFrame = 0;\n    const render = (time) => {\n        let delta = (time - lastFrame) / 1000;\n        lastFrame = time;\n        actors.forEach((actor) => actor.update(delta));\n        ctx.clearRect(0, 0, 650, 720);\n        actors.sort((a, b) => { return a.position.y - b.position.y }).forEach((actor) => actor.draw(delta, ctx));\n        window.requestAnimationFrame(render);\n    };\n\n    //setInterval(render, frameTime);\n    window.requestAnimationFrame(render);\n\n    // Eventos de teclado\n    document.body.addEventListener(\"keydown\", (e) => {\n        actors.forEach((actor) => actor.keyboard_event(e.key));\n    });\n    document.body.addEventListener(\"keyup\", (e) => {\n        actors.forEach((actor) => {\n            if (actor.keyboard_event_up) {\n                actor.keyboard_event_up(e.key);\n            }\n        });\n    });\n};\n\n"]}